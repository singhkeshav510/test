{"version":3,"sources":["components/PrivateRoute.js","actions/types.js","utils/url.js","services/auth.service.js","actions/auth.js","components/Login.js","services/auth-header.js","services/user.service.js","actions/user.js","utils/alertsText.js","utils/getTime.js","components/DashBoard.js","components/User.js","services/scheduler.service.js","actions/scheduler.js","components/Scheduler.js","utils/symbolFilters.js","services/adminuser.service.js","actions/adminuser.js","components/AdminUser.js","utils/dbFields.js","services/urlapi.service.js","actions/urlapi.js","components/UrlApi.js","utils/validUrl.js","actions/portfolio.js","services/portfolio.service.js","services/ticker.service.js","components/Portfolio.js","services/historical.service.js","components/HistoricalData.js","actions/historicaldata.js","services/symbol.service.js","components/Symbols.js","actions/symbol.js","components/ResetPassword.js","services/toplist.service.js","actions/toplist.js","components/TopList.js","services/indices.service.js","actions/index.js","components/Index.js","App.js","reducers/auth.js","reducers/message.js","reducers/user.js","reducers/adminuser.js","reducers/portfolio.js","reducers/historical.js","reducers/urlapi.js","reducers/symbol.js","reducers/toplist.js","reducers/indices.js","reducers/scheduler.js","reducers/index.js","store.js","index.js"],"names":["PrivateRoute","props","useSelector","state","auth","isLoggedIn","path","exact","component","to","LOGIN_SUCCESS","LOGIN_FAIL","RESET_SUCCESS","RESET_FAILURE","FORGET_SUCCESS","FORGET_FAILURE","FORGET_REQUEST","LOGOUT","USER_REQUEST","USER_SUCCESS","USER_FAILURE","ADMINUSER_REQUEST","ADMINUSER_SUCCESS","ADMINUSER_FAILURE","CADMINUSER_REQUEST","CADMINUSER_SUCCESS","CADMINUSER_FAILURE","PORTFOLIO_REQUEST","PORTFOLIO_SUCCESS","PORTFOLIO_FAILURE","CPORTFOLIO_REQUEST","CPORTFOLIO_SUCCESS","CPORTFOLIO_FAILURE","HISTORICAL_REQUEST","HISTORICAL_SUCCESS","HISTORICAL_FAILURE","SYMBOL_REQUEST","SYMBOL_SUCCESS","SYMBOL_FAILURE","TOP_REQUEST","TOP_SUCCESS","TOP_FAILURE","CTOP_REQUEST","CTOP_SUCCESS","CTOP_FAILURE","INDEX_REQUEST","INDEX_SUCCESS","INDEX_FAILURE","CINDEX_REQUEST","CINDEX_SUCCESS","CINDEX_FAILURE","SCHEDULER_REQUEST","SCHEDULER_SUCCESS","SCHEDULER_FAILURE","CSCHEDULER_REQUEST","CSCHEDULER_SUCCESS","CSCHEDULER_FAILURE","URL_REQUEST","URL_SUCCESS","URL_FAILURE","CURL_REQUEST","CURL_SUCCESS","CURL_FAILURE","SET_MESSAGE","CLEAR_MESSAGE","url","API_URL","email","password","axios","post","then","response","data","token","localStorage","setItem","JSON","stringify","superUser","userName","id","removeItem","required","value","Alert","variant","Login","history","useHistory","form","useRef","checkBtn","useState","setEmail","loading","setLoading","setPassword","formType","setFormType","messag","err","message","dispatch","useDispatch","Container","Row","md","className","Col","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","username","AuthService","type","payload","user","Promise","resolve","error","toString","reject","login","push","window","location","reload","catch","a","res","forgetPassword","ref","Form","Group","controlId","Label","name","onChange","target","validations","Text","Check","label","Button","disabled","Spinner","animation","style","display","authHeader","parse","getItem","Authorization","getUsers","get","headers","users","deleteUser","delete","console","log","deleteAllUsers","getUser","setUserDetail","getUserSummary","setSummary","registered","methods","PHONE","EMAIL","GOOGLE","system","system_efficiency","getTopStocks","setTopStock","alerts","getTime","val","d","Date","date","hours","getHours","minutes","getMinutes","ampm","formatAMPM","getDate","getMonth","getFullYear","DashBoard","show","setShow","header","toast","setToast","summary","topStocks","useEffect","setTimeout","labels","datasets","backgroundColor","hoverBackgroundColor","aria-live","aria-atomic","Toast","position","zIndex","top","right","onClose","Header","src","alt","now","Body","Accordion","defaultActiveKey","Card","Toggle","as","eventKey","Badge","pill","Collapse","map","width","Title","ListGroup","Item","sym","freq","IconButton","onClick","open","fontSize","color","title","key","Model","Modal","aria-labelledby","centered","backdrop","onHide","close","closeButton","full_name","uid","phone","method","riskProfile","dob","country","Table","responsive","striped","bordered","hover","watchlist","symbol","noShare","userPrice","User","userdetails","showU","setShowU","handleClose","count","csvReport","filename","fluid","keyboard","Footer","sm","isLoading","address","riskTolerance","main_dob","createdAt","updatedAt","imageUrl","Avatar","_id","getschedulers","schedulers","getFunctionality","setOptions","urls","deleteScheduler","updateScheduler","patch","UpScheduler","functionality","scheduleType","weekdays","time","hour","minute","duration","every","scheduler","setScheduler","options","vak","p","Control","placeholder","String","split","step","min","suggestions","Scheduler","setId","up","setUp","cisLoading","userc","scheduledAt","handleShowU","filterSymbol","list","listr","forEach","quoteType","getAdminUsers","AdminUser","setName","setsuperUser","adminuser","filter","toggle","put","List","ETF","HISTORICAL","TICKER","NEWS","getUrls","deleteUrl","popover","Popover","Content","UrlApi","field","setField","keys","isIpBlocking","batch","restrictions","per","responseKeys","mapsToSchema","urlspec","setUrlSpec","urlapi","str","undefined","RegExp","test","Number","onAdd","chip","onDelete","index","_","without","trim","keyName","mapsTo","num","OverlayTrigger","trigger","placement","delay","hide","overlay","cportfolioSuccess","cportfolioRequest","cportfolioFailure","getPortfolios","portfolios","getETFs","etfs","includes","toUpperCase","getTickers","tickers","us","usDefault","usPercent","intExUS","intExUSDefault","intExUSPercent","bondPercent","bondDefault","bond","region","local","setLocal","portfolio","max","fetchSuggestions","ind","Portfolio","showu","deletePortfolio","HistoricalData","from","moment","format","filters","setFilters","handleCloseU","disab","setDisab","historical","historicals","Symbol","industry","newSymbol","setNewSymbol","defaul","setDefaul","Name","ResetPassword","stri","href","resetPassword","getTopLists","deleteTopList","getTop","setTopList","dta","updateTop","sortBy","criteria","topList","weightage","TopList","toplist","getIndices","indexs","deleteIndex","updateIndex","setIndex","Index","indices","addETF","App","Navbar","collapseOnSelect","sticky","bg","expand","Brand","aria-controls","Nav","Link","Symbols","initialState","isloading","combineReducers","action","actions","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d426b9fb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nconst PrivateRoute: React.FC<{\n  component: React.FC,\n  path: string,\n  exact: boolean,\n}> = (props) => {\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const condition = isLoggedIn;\n\n  return condition ? (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  ) : (\n    <Redirect to=\"/admin/login\" />\n  );\n};\nexport default PrivateRoute;\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const RESET_SUCCESS = \"RESET_SUCCESS\";\nexport const RESET_FAILURE = \"RESET_FAILURE\";\nexport const FORGET_SUCCESS = \"FORGET_SUCCESS\";\nexport const FORGET_FAILURE = \"FORGET_FAILURE\";\nexport const FORGET_REQUEST = \"FORGET_REQUEST\";\nexport const LOGOUT = \"LOGOUT\";\nexport const USER_REQUEST = \"USER_REQUEST\";\nexport const USER_SUCCESS = \"USER_SUCCESS\";\nexport const USER_FAILURE = \"USER_FAILURE\";\nexport const ADMINUSER_REQUEST = \"ADMINUSER_REQUEST\";\nexport const ADMINUSER_SUCCESS = \"ADMINUSER_SUCCESS\";\nexport const ADMINUSER_FAILURE = \"ADMINUSER_FAILURE\";\nexport const CADMINUSER_REQUEST = \"ADMINUSER_REQUEST\";\nexport const CADMINUSER_SUCCESS = \"CADMINUSER_SUCCESS\";\nexport const CADMINUSER_FAILURE = \"CADMINUSER_FAILURE\";\nexport const PORTFOLIO_REQUEST = \"PORTFOLIO_REQUEST\";\nexport const PORTFOLIO_SUCCESS = \"PORTFOLIO_SUCCESS\";\nexport const PORTFOLIO_FAILURE = \"PORTFOLIO_FAILURE\";\nexport const CPORTFOLIO_REQUEST = \"CPORTFOLIO_REQUEST\";\nexport const CPORTFOLIO_SUCCESS = \"CPORTFOLIO_SUCCESS\";\nexport const CPORTFOLIO_FAILURE = \"CPORTFOLIO_FAILURE\";\nexport const HISTORICAL_REQUEST = \"HISTORICAL_REQUEST\";\nexport const HISTORICAL_SUCCESS = \"HISTORICAL_SUCCESS\";\nexport const HISTORICAL_FAILURE = \"HISTORICAL_FAILURE\";\nexport const SYMBOL_REQUEST = \"SYMBOL_REQUEST\";\nexport const SYMBOL_SUCCESS = \"SYMBOL_SUCCESS\";\nexport const SYMBOL_FAILURE = \"SYMBOL_FAILURE\";\nexport const TOP_REQUEST = \"TOP_REQUEST\";\nexport const TOP_SUCCESS = \"TOP_SUCCESS\";\nexport const TOP_FAILURE = \"TOP_FAILURE\";\nexport const CTOP_REQUEST = \"CTOP_REQUEST\";\nexport const CTOP_SUCCESS = \"CTOP_SUCCESS\";\nexport const CTOP_FAILURE = \"CTOP_FAILURE\";\nexport const INDEX_REQUEST = \"INDEX_REQUEST\";\nexport const INDEX_SUCCESS = \"INDEX_SUCCESS\";\nexport const INDEX_FAILURE = \"INDEX_FAILURE\";\nexport const CINDEX_REQUEST = \"CINDEX_REQUEST\";\nexport const CINDEX_SUCCESS = \"CINDEX_SUCCESS\";\nexport const CINDEX_FAILURE = \"CINDEX_FAILURE\";\nexport const SCHEDULER_REQUEST = \"SCHEDULER_REQUEST\";\nexport const SCHEDULER_SUCCESS = \"SCHEDULER_SUCCESS\";\nexport const SCHEDULER_FAILURE = \"SCHEDULER_FAILURE\";\nexport const CSCHEDULER_REQUEST = \"CSCHEDULER_REQUEST\";\nexport const CSCHEDULER_SUCCESS = \"CSCHEDULER_SUCCESS\";\nexport const CSCHEDULER_FAILURE = \"CSCHEDULER_FAILURE\";\nexport const URL_REQUEST = \"URL_REQUEST\";\nexport const URL_SUCCESS = \"URL_SUCCESS\";\nexport const URL_FAILURE = \"URL_FAILURE\";\nexport const CURL_REQUEST = \"CURL_REQUEST\";\nexport const CURL_SUCCESS = \"CURL_SUCCESS\";\nexport const CURL_FAILURE = \"CURL_FAILURE\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","export const url = \"http://35.226.136.14/admin\";\n","import axios from \"axios\";\nimport {\n  forgetSuccess,\n  forgetFailure,\n  forgetRequest,\n  resetSuccess,\n  resetFailure,\n} from \"../actions/auth\";\nimport { url } from \"../utils/url\";\nconst API_URL = `${url}/api/v1/auth/`;\n\nconst login = (email, password) => {\n  return axios\n    .post(API_URL + \"loginAdmin\", {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.token) {\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({\n            token: response.data.token,\n            superUser: response.data.superUser,\n            userName: response.data.userName,\n            email: response.data.email,\n            id: response.data.id,\n          })\n        );\n      }\n\n      return response.data;\n    });\n};\n\nexport const forgetPassword = (email) => {\n  return async (dispatch) => {\n    try {\n      dispatch(forgetRequest());\n      const res = await axios.post(API_URL + \"forgotpasswordAdmin\", { email });\n      const message = res.data.data;\n      dispatch(forgetSuccess(message));\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch(forgetFailure(message));\n    }\n  };\n};\n\nexport const resetPassword = (password, val) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.put(API_URL + \"resetpasswordAdmin/\" + val, {\n        password: password,\n      });\n      const message = res.data.data;\n      dispatch(resetSuccess(message));\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch(resetFailure(message));\n    }\n  };\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  login,\n  logout,\n};\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  FORGET_SUCCESS,\n  FORGET_FAILURE,\n  FORGET_REQUEST,\n  RESET_SUCCESS,\n  RESET_FAILURE,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport function forgetSuccess(user) {\n  return {\n    type: FORGET_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function forgetRequest() {\n  return {\n    type: FORGET_REQUEST,\n  };\n}\n\nexport function forgetFailure(err) {\n  return { type: FORGET_FAILURE, payload: err };\n}\nexport function resetSuccess(user) {\n  return {\n    type: RESET_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function resetFailure(err) {\n  return { type: RESET_FAILURE, payload: err };\n}\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\nimport Forma from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { login } from \"../actions/auth\";\nimport { forgetPassword } from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return <Alert variant=\"primary\">This is a required field</Alert>;\n  }\n};\n\nfunction Login(props) {\n  const history = useHistory();\n  const form = useRef();\n  const checkBtn = useRef();\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [formType, setFormType] = useState(true);\n  const { isLoggedIn, messag, err } = useSelector((state) => state.auth);\n  const { message } = useSelector((state) => state.message);\n\n  const dispatch = useDispatch();\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      if (formType === true) {\n        dispatch(login(email, password))\n          .then(() => {\n            history.push(\"/admin/dashBoard\");\n            window.location.reload();\n            setLoading(false);\n          })\n          .catch(() => {\n            setLoading(false);\n          });\n      } else {\n        setLoading(true);\n        dispatch(forgetPassword(email));\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  }\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setEmail(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/admin/dashBoard\" />;\n  }\n  return (\n    <Container>\n      <Row md={6} className=\"justify-content-md-center \">\n        <Col md={6}>\n          <h2>Welcome to Admin Portal</h2>\n        </Col>\n      </Row>\n      <Row md={6} className=\"justify-content-md-center \">\n        <Col md={6}>\n          <Forma onSubmit={handleSubmit} ref={form}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                value={email}\n                onChange={onChangeUsername}\n                validations={[required]}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n            {formType && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Password</Form.Label>:\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required]}\n                />\n              </Form.Group>\n            )}\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check\n                onChange={(e) => setFormType(!formType)}\n                type=\"checkbox\"\n                label={formType ? \"Forgot Password\" : \"Login\"}\n              />\n            </Form.Group>\n            <Button disabled={loading} variant=\"primary\" type=\"submit\">\n              {loading ? <Spinner animation=\"border\" /> : \"Submit\"}\n            </Button>\n\n            {message && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"warning\">{message}</Alert>\n              </Form.Group>\n            )}\n            {messag && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{messag}</Alert>\n              </Form.Group>\n            )}\n            {err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{err}</Alert>\n              </Form.Group>\n            )}\n\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n          </Forma>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.token) {\n    return { Authorization: \"Bearer \" + user.token };\n  } else {\n    return {};\n  }\n}\n","import { userSuccess, userFailure, userRequest } from \"../actions/user\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/users/Usr/`;\nconst message = \"Please Logout and Try Again\";\nexport const getUsers = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(userRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n      dispatch(userSuccess(users));\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      dispatch(userFailure(message));\n    }\n  };\n};\n\nexport const deleteUser = async (id) => {\n  try {\n    await axios.delete(API_URL + id, {\n      headers: authHeader(),\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteAllUsers = async () => {\n  try {\n    await axios.delete(API_URL + \"*\", {\n      headers: authHeader(),\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUser = async (id, setUserDetail) => {\n  try {\n    const res = await axios.get(API_URL + id, {\n      headers: authHeader(),\n    });\n    const users = res.data.data;\n    setUserDetail(users);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUserSummary = async (setSummary) => {\n  try {\n    const res = await axios.get(API_URL + \"Summary\", {\n      headers: authHeader(),\n    });\n    const data = res.data.data;\n    setSummary({\n      registered: data.registered,\n      methods: {\n        PHONE: data.methods.PHONE,\n        EMAIL: data.methods.EMAIL,\n        GOOGLE: data.methods.GOOGLE,\n      },\n      system: data.system_efficiency,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getTopStocks = async (setTopStock) => {\n  try {\n    const res = await axios.get(API_URL + \"topStock\", {\n      headers: authHeader(),\n    });\n    const data = res.data.data;\n    setTopStock(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { USER_FAILURE, USER_SUCCESS, USER_REQUEST } from \"./types\";\n\nexport function userSuccess(user) {\n  return {\n    type: USER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function userRequest() {\n  return {\n    type: USER_REQUEST,\n  };\n}\n\nexport function userFailure(err) {\n  return { type: USER_FAILURE, payload: err };\n}\n","export const alerts = [\n  \"Deleting ETFs from DashBoard deletes ETFs, Indexes, Portfolio. In short, everything where ETF is involved.\",\n  \"Options (Symbols, Stocks, ETF, Historical Data) on DashBoard should be only  \",\n  \"Use Historical Section Purge Button only when needed or when System Health falls below 75%. This action takes 30-40 minutes.\",\n  \"By toggling superUser option, admin status can be changed\",\n  \"The options (Deleting a user, Deleting all Users, Creating a Symbol, Deleting a symbol,creating schedulers,updating schedulers, deleting schedulers, deleting APIs, updating APIs, creating APIs, and other Super Admin Configuration) are only accessible to Super Admins\",\n  \"The options (Symbols, Stocks, ETF, Historical Data) on DashBoard should only be used when there are no symbols in Symbol Section.\",\n];\n","export function getTime(val) {\n  const d = new Date(val);\n  return `${formatAMPM(d)} ${d.getDate()}/${\n    d.getMonth() + 1\n  }/${d.getFullYear()}`;\n}\n\nexport function getDate(val) {\n  var d = new Date(val);\n  return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n}\n\nexport function formatAMPM(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n  return strTime;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Badge,\n  Card,\n  Alert,\n  Accordion,\n  ListGroup,\n  Toast,\n} from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { IconButton } from \"@material-ui/core\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport { getUserSummary, getTopStocks } from \"../services/user.service\";\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\nimport { alerts } from \"../utils/alertsText\";\nimport { getTime } from \"../utils/getTime\";\n\nfunction DashBoard() {\n  const [show, setShow] = useState(false);\n  const [toast, setToast] = useState({\n    header: \"Message \",\n    message: `Hi ${JSON.parse(localStorage.getItem(\"user\")).userName}!`,\n  });\n  let data;\n  const [summary, setSummary] = useState({\n    registered: 0,\n    methods: { PHONE: 0, EMAIL: 0, GOOGLE: 0 },\n    system: 100,\n  });\n  const [topStocks, setTopStock] = useState([]);\n  useEffect(() => {\n    setShow(true);\n    setTimeout(() => {\n      getUserSummary(setSummary);\n\n      setToast({\n        header: \"Message \",\n        message: `Fetching Registered Users`,\n      });\n    }, 3000);\n    setTimeout(() => {\n      getTopStocks(setTopStock);\n      setToast({\n        header: \"Message \",\n        message: `Fetching Top Stocks`,\n      });\n    }, 6000);\n    setTimeout(() => {\n      setShow(false);\n    }, 10000);\n  }, []);\n  data = {\n    labels: [\"Google Sign-In\", \"Email ID\", \"Phone Number\"],\n    datasets: [\n      {\n        data: [\n          summary.methods.GOOGLE,\n          summary.methods.EMAIL,\n          summary.methods.PHONE,\n        ],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      },\n    ],\n  };\n\n  return (\n    <>\n      <div aria-live=\"absolute\" aria-atomic=\"true\">\n        <Toast\n          style={{\n            position: \"fixed\",\n            zIndex: 1,\n            top: 70,\n            right: 2,\n          }}\n          onClose={() => setShow(false)}\n          show={show}\n        >\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">{toast.header}</strong>\n            <small> @{getTime(Date.now())}</small>\n          </Toast.Header>\n          <Toast.Body>{toast.message}</Toast.Body>\n        </Toast>\n      </div>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col md={5}>\n            <h1>Welcome to DashBoard</h1>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <Accordion defaultActiveKey=\"0\">\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                  <Badge pill variant=\"danger\">\n                    Note\n                  </Badge>\n                  <TouchAppIcon />\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    {alerts.map((e) => {\n                      return <Alert variant=\"info\">{e}</Alert>;\n                    })}\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <h3>General Information</h3>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>User Summary</Card.Title>\n                <Doughnut data={data} />\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>\n                  Top Stocks <Badge variant=\"success\">Live</Badge>{\" \"}\n                </Card.Title>\n                <Card.Text>\n                  <ListGroup variant=\"flush\">\n                    {topStocks.map((e) => {\n                      return (\n                        <ListGroup.Item>\n                          {e.sym} <code>{e.freq}</code>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>System Health</Card.Title>\n                <Card.Text>\n                  This section gives System Health based on Logs and Server CPU\n                  Usage\n                </Card.Text>\n                <h3>\n                  {\" \"}\n                  <code>{summary.system} %</code>\n                </h3>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        <hr />\n        <Row>\n          <Col>\n            <h3>Super Admin Configuration</h3>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>Google Analytics</Card.Title>\n                <Card.Text>Show me Analytics</Card.Text>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Opening Google Analytics`,\n                    });\n                    setTimeout(() => {\n                      window.open(\n                        \"https://console.firebase.google.com/u/3/project/valuation-app-dd246/analytics/app/android:com.example.valuation_app/overview/~2F%3Ft%3D1622031876204&fpn%3D714635515053&swu%3D1&sgu%3D1&sus%3Dupgraded&cs%3Dapp.m.dashboard.overview&g%3D1\"\n                      );\n                      setShow(false);\n                    }, 2000);\n                  }}\n                >\n                  <TimelineIcon fontSize=\"large\" />\n                </IconButton>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title style={{ color: \"red\" }}>Symbols</Card.Title>\n                <Card.Text>\n                  This section deals with symbols (Default list: 560 Symbols)\n                </Card.Text>\n                <Badge pill variant=\"warning\">\n                  Warning\n                </Badge>\n                <IconButton\n                  title=\"Add Default Symbol\"\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Adding Symbols `,\n                    });\n                  }}\n                >\n                  <AddIcon fontSize=\"large\" />\n                </IconButton>{\" \"}\n                <IconButton\n                  title=\"Delete All Symbol\"\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Deleting All Symbols`,\n                    });\n                  }}\n                >\n                  <DeleteOutlineIcon fontSize=\"large\" />\n                </IconButton>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title style={{ color: \"red\" }}>Stocks</Card.Title>\n                <Card.Text>\n                  This section deals with Stock (Default list: 524 Symbols)\n                </Card.Text>\n                <Badge pill variant=\"warning\">\n                  Warning\n                </Badge>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Adding Stocks from Symbols`,\n                    });\n                  }}\n                >\n                  <AddIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Deleting All Stocks`,\n                    });\n                  }}\n                >\n                  <DeleteOutlineIcon fontSize=\"large\" />\n                </IconButton>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title style={{ color: \"red\" }}>ETF</Card.Title>\n                <Card.Text>\n                  This section deals with ETFs. (Default list: 36 Symbols)\n                </Card.Text>\n                <Badge pill variant=\"warning\">\n                  Warning\n                </Badge>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Adding ETFs from Symbols`,\n                    });\n                  }}\n                >\n                  <AddIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Deleting All ETFs`,\n                    });\n                  }}\n                >\n                  <DeleteOutlineIcon fontSize=\"large\" />\n                </IconButton>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title style={{ color: \"red\" }}>\n                  Historical Data\n                </Card.Title>\n                <Card.Text>\n                  This section deals with Historical Data (Default list: All\n                  Symbols)\n                </Card.Text>\n                <Badge pill variant=\"warning\">\n                  Warning\n                </Badge>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Triggering Historical Data Fetch`,\n                    });\n                  }}\n                >\n                  <AddIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    setShow(true);\n                    setToast({\n                      header: \"Message \",\n                      message: `Deleting All Historical Data`,\n                    });\n                  }}\n                >\n                  <DeleteOutlineIcon fontSize=\"large\" />\n                </IconButton>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default DashBoard;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Spinner,\n  Alert,\n  Modal,\n  Button,\n  Badge,\n} from \"react-bootstrap\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport { IconButton } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n  getUsers,\n  deleteUser,\n  deleteAllUsers,\n  getUser,\n} from \"../services/user.service\";\nimport { getDate, getTime } from \"../utils/getTime\";\nimport { CSVLink } from \"react-csv\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst headers = [\n  { label: \"User ID\", key: \"uid\" },\n  { label: \"Name\", key: \"full_name\" },\n  { label: \"Email\", key: \"email\" },\n  { label: \"Phone\", key: \"phone\" },\n  { label: \"Country\", key: \"country\" },\n  { label: \"Address\", key: \"address\" },\n  { label: \"Method\", key: \"method\" },\n  { label: \"Risk Tolerance\", key: \"riskTolerance\" },\n  { label: \"Date of Birth\", key: \"main_dob\" },\n  { label: \"Image URL\", key: \"imageUrl\" },\n  { label: \"Created At\", key: \"createdAt\" },\n  { label: \"Updated At\", key: \"updatedAt\" },\n];\n\nconst Model = (props) => {\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"static\"\n      show={props.show}\n      onHide={props.close}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>User Details</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Full Name: {props.user.full_name}</p>\n        <p>User ID: {props.user.uid}</p>\n        <p>\n          Phone Number:{\" \"}\n          {props.user.phone.length === 0 ? \"N/A\" : props.user.phone}\n        </p>\n        <p>Method: {props.user.method}</p>\n        <p>Risk Profile: {props.user.riskProfile}</p>\n        <p>\n          Date of Birth:{\" \"}\n          {props.user.dob === \"Fetching\" ? \"Fetching\" : getDate(props.user.dob)}\n        </p>\n        <p>Country: {props.user.country}</p>\n\n        <Table responsive striped bordered hover>\n          <thead>\n            <tr>\n              <th>Stocks Added</th>\n              <th>Number of Shares</th>\n              <th>User Purchased Price(in $)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.user.watchlist.map((e) => {\n              return (\n                <tr>\n                  <td>{e.symbol}</td>\n                  <td>{e.noShare}</td>\n                  <td>{e.userPrice}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Modal.Body>\n    </Modal>\n  );\n};\nfunction User() {\n  const [show, setShow] = useState(false);\n  const [userdetails, setUserDetail] = useState({\n    uid: \"Fetching\",\n    watchlist: [],\n    riskProfile: \"Fetching\",\n    country: \"Fetching\",\n    phone: \"Fetching\",\n    full_name: \"Fetching\",\n    dob: \"Fetching\",\n    method: \"Fetching\",\n  });\n  const [showU, setShowU] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseU = () => setShowU(false);\n  const handleShowU = () => setShowU(true);\n  let count = 0;\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  const csvReport = {\n    data: user.users,\n    headers: headers,\n    filename: \"User_Report.csv\",\n  };\n\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <DeleteIcon color=\"secondary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n      <Model show={showU} close={handleCloseU} user={userdetails} />\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Delete All Users</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Doing this will delete all users from Firebase and MongoDB. Are you\n          sure?{\" \"}\n          <Badge pill variant=\"warning\">\n            Warning\n          </Badge>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"success\" onClick={handleClose}>\n            Close it\n          </Button>\n          <Button\n            onClick={() => {\n              deleteAllUsers();\n              dispatch(getUsers());\n              handleClose();\n            }}\n            variant=\"danger\"\n          >\n            Yes I am aware\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Row className=\"justify-content-sm-center\">\n        <Col sm={5}>\n          <h1>User Section</h1>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <CSVLink {...csvReport}>Export User Data as CSV</CSVLink>\n        </Col>\n      </Row>\n\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>User ID</th>\n                <th>Name</th>\n                <th>Phone</th>\n                <th>Email</th>\n                <th>Country</th>\n                <th>Address</th>\n                <th>Method</th>\n                <th>Risk Tolerance</th>\n                <th>Dob</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>View Image</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!user.isLoading &&\n                user.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.uid}</td>\n                      <td>{e.full_name ? e.full_name : \"N/A\"}</td>\n                      <td>{e.phone ? e.phone : \"N/A\"}</td>\n                      <td>{e.email ? e.email : \"N/A\"}</td>\n                      <td>{e.country ? e.country : \"N/A\"}</td>\n                      <td>{e.address ? e.address : \"N/A\"}</td>\n                      <td>{e.method}</td>\n                      <td>{e.riskTolerance ? e.riskTolerance : \"N/A\"}</td>\n                      <td>{e.main_dob ? getDate(e.main_dob) : \"N/A\"}</td>\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            window.open(e.imageUrl, \"_blank\");\n                          }}\n                        >\n                          <Avatar alt=\"Loading\" src={e.imageUrl} />\n                        </IconButton>\n                      </td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            deleteUser(e._id);\n                            setTimeout(() => {\n                              dispatch(getUsers());\n                            }, 1000);\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                        <IconButton\n                          onClick={() => {\n                            getUser(e._id, setUserDetail);\n                            setTimeout(() => handleShowU(), 2000);\n                          }}\n                        >\n                          <ViewListIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {user.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {user.err && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <Alert>{user.err}</Alert>\n          </Col>\n        </Row>\n      )}\n      {!user.isLoading && user.err.length === 0 && user.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No User</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default User;\n","import {\n  schedulerSuccess,\n  schedulerFailure,\n  schedulerRequest,\n  cschedulerSuccess,\n  cschedulerFailure,\n  cschedulerRequest,\n} from \"../actions/scheduler\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/urlspecific`;\n\nexport const getschedulers = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(schedulerRequest());\n      const res = await axios.get(`${API_URL}/schedulers`, {\n        headers: authHeader(),\n      });\n      const schedulers = res.data.data;\n      dispatch(schedulerSuccess(schedulers));\n    } catch (e) {\n      dispatch(schedulerFailure(e.message));\n    }\n  };\n};\n\nexport const createschedulers = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cschedulerRequest());\n      const res = await axios.post(`${API_URL}/schedulers`, data, {\n        headers: authHeader(),\n      });\n      const schedulers = res.data.data;\n      console.log(schedulers);\n      dispatch(cschedulerSuccess(schedulers));\n    } catch (e) {\n      dispatch(cschedulerFailure(e.message));\n    }\n  };\n};\n\nexport const getFunctionality = async (setOptions) => {\n  try {\n    const res = await axios.get(API_URL, {\n      headers: authHeader(),\n    });\n    let urls = res.data.data;\n    if (urls.length === 0) return [];\n    urls = urls.map((e) => {\n      return { name: e.name, id: e._id };\n    });\n    setOptions(urls);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const deleteScheduler = async (id) => {\n  try {\n    await axios.delete(`${API_URL}/schedulers/${id}`, {\n      headers: authHeader(),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const updateScheduler = async (data, id) => {\n  try {\n    const message = await axios.patch(`${API_URL}/schedulers/${id}`, data, {\n      headers: authHeader(),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import {\n  SCHEDULER_FAILURE,\n  SCHEDULER_SUCCESS,\n  SCHEDULER_REQUEST,\n  CSCHEDULER_FAILURE,\n  CSCHEDULER_SUCCESS,\n  CSCHEDULER_REQUEST,\n} from \"./types\";\n\nexport function schedulerSuccess(user) {\n  return {\n    type: SCHEDULER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function schedulerRequest() {\n  return {\n    type: SCHEDULER_REQUEST,\n  };\n}\n\nexport function schedulerFailure(err) {\n  return { type: SCHEDULER_FAILURE, payload: err };\n}\n\nexport function cschedulerSuccess(user) {\n  return {\n    type: CSCHEDULER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function cschedulerRequest() {\n  return {\n    type: CSCHEDULER_REQUEST,\n  };\n}\n\nexport function cschedulerFailure(err) {\n  return { type: CSCHEDULER_FAILURE, payload: err };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  OverlayTrigger,\n  Spinner,\n  Button,\n  Form,\n  Table,\n  Modal,\n  Popover,\n  Alert,\n} from \"react-bootstrap\";\nimport Chips from \"react-chips\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { IconButton } from \"@material-ui/core\";\nimport {\n  getschedulers,\n  getFunctionality,\n  createschedulers,\n  deleteScheduler,\n  updateScheduler,\n} from \"../services/scheduler.service\";\nimport { getTime } from \"../utils/getTime\";\n\nconst popover = (val) => {\n  return (\n    <Popover id=\"sds\">\n      <Popover.Content>{val}</Popover.Content>\n    </Popover>\n  );\n};\n\nconst UpScheduler = (props) => {\n  const [scheduler, setScheduler] = useState({\n    name: \"\",\n    functionality: \"\",\n    scheduleType: \"PARTICULAR\",\n    weekdays: [],\n    time: { hour: \"12\", minute: \"56\", duration: \"15\", every: \"MINUTE\" },\n  });\n  const dispatch = useDispatch();\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    setScheduler({\n      ...scheduler,\n      name: props.e.name,\n      functionality: props.e.functionality,\n      scheduleType: props.e.scheduleType,\n    });\n  }, [props]);\n  useEffect(() => {\n    getFunctionality(setOptions);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (options.length > 0 && scheduler.functionality.length === 0) {\n      let vak = options[0].name;\n      setScheduler({ ...scheduler, functionality: vak });\n    }\n    if (\n      scheduler.weekdays.length === 0 ||\n      scheduler.functionality.length === 0\n    ) {\n      console.log(\"Bad Request\");\n    }\n\n    let p;\n    if (scheduler.scheduleType === \"PARTICULAR\") {\n      p = {\n        time: { hour: scheduler.time.hour, minute: scheduler.time.minute },\n      };\n    } else {\n      p = {\n        time: {\n          duration: scheduler.time.duration,\n          every: scheduler.time.every,\n        },\n      };\n    }\n    p = {\n      ...p,\n      name: scheduler.name,\n      weekdays: scheduler.weekdays,\n      scheduleType: scheduler.scheduleType,\n    };\n    //dispatch(updateScheduler(p));\n\n    updateScheduler(p, props.id);\n    setTimeout(() => {\n      dispatch(getschedulers());\n      props.close();\n    }, 2000);\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"static\"\n      show={props.show}\n      onHide={props.close}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Update a Scheduler</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Scheduler Name: </Form.Label>\n            <Form.Control\n              value={scheduler.name}\n              onChange={(e) =>\n                setScheduler({ ...scheduler, name: e.target.value })\n              }\n              required\n              type=\"text\"\n              placeholder=\"Enter a Name\"\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Scheduler Type:</Form.Label>\n            <Form.Control\n              disabled\n              value={scheduler.scheduleType}\n              onChange={(e) =>\n                setScheduler({ ...scheduler, scheduleType: e.target.value })\n              }\n              required\n              as=\"select\"\n            >\n              <option value=\"PARTICULAR\">Specific Time</option>\n              <option value=\"INTERVAL\">Interval</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Schedule\n              {scheduler.scheduleType === \"PARTICULAR\"\n                ? \" Time:\"\n                : \" Interval(in Minutes):\"}\n            </Form.Label>\n            {scheduler.scheduleType === \"PARTICULAR\" && (\n              <Form.Control\n                value={`${scheduler.time.hour}:${scheduler.time.minute}`}\n                onChange={(e) => {\n                  let t = String(e.target.value);\n                  let p = t.split(\":\");\n                  setScheduler({\n                    ...scheduler,\n                    time: { ...scheduler.time, hour: p[0], minute: p[1] },\n                  });\n                }}\n                required\n                type=\"time\"\n              />\n            )}\n            {scheduler.scheduleType === \"INTERVAL\" && (\n              <Form.Control\n                value={scheduler.time.duration}\n                onChange={(e) => {\n                  setScheduler({\n                    ...scheduler,\n                    time: { ...scheduler.time, duration: e.target.value },\n                  });\n                }}\n                required\n                type=\"number\"\n                step=\"10\"\n                min=\"10\"\n              />\n            )}\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Functionality:</Form.Label>\n            <Form.Control\n              required\n              value={scheduler.functionality}\n              onChange={(e) =>\n                setScheduler({ ...scheduler, functionality: e.target.value })\n              }\n              as=\"select\"\n            >\n              {options.map((e) => {\n                return (\n                  <option key={e.id} value={e.name}>\n                    {e.name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Scheduler Triggers:</Form.Label>\n            <Chips\n              required\n              placeholder=\"Add Weekdays Tags Here\"\n              value={scheduler.weekdays}\n              suggestions={[\n                \"Sunday\",\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\",\n              ]}\n              onChange={(e) => setScheduler({ ...scheduler, weekdays: e })}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Update\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nfunction Scheduler() {\n  const [id, setId] = useState(\"\");\n  const [scheduler, setScheduler] = useState({\n    name: \"\",\n    functionality: \"\",\n    scheduleType: \"PARTICULAR\",\n    weekdays: [],\n    time: { hour: \"12\", minute: \"56\", duration: \"15\", every: \"MINUTE\" },\n  });\n  const [up, setUp] = useState({\n    name: \"\",\n    functionality: \"\",\n    scheduleType: \"PARTICULAR\",\n    weekdays: [],\n    time: { hour: \"12\", minute: \"56\", duration: \"15\", every: \"MINUTE\" },\n  });\n  const [options, setOptions] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [showU, setShowU] = useState(false);\n\n  const handleCloseU = () => setShowU(false);\n  const handleShowU = (e) => {\n    setUp(e);\n    setShowU(true);\n  };\n  let count = 0;\n  const dispatch = useDispatch();\n  const schedulers = useSelector((state) => state.scheduler);\n  useEffect(() => {\n    dispatch(getschedulers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    getFunctionality(setOptions);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (options.length > 0 && scheduler.functionality.length === 0) {\n      let vak = options[0].name;\n      setScheduler({ ...scheduler, functionality: vak });\n    }\n    if (scheduler.weekdays.length > 0 && scheduler.functionality.length > 0) {\n      let p;\n      if (scheduler.scheduleType === \"PARTICULAR\") {\n        p = {\n          time: { hour: scheduler.time.hour, minute: scheduler.time.minute },\n        };\n      } else {\n        p = {\n          time: {\n            duration: scheduler.time.duration,\n            every: scheduler.time.every,\n          },\n        };\n      }\n      p = {\n        ...p,\n        name: scheduler.name,\n        functionality: scheduler.functionality,\n        weekdays: scheduler.weekdays,\n        scheduleType: scheduler.scheduleType,\n      };\n      dispatch(createschedulers(p));\n\n      if (!scheduler.err) {\n        setTimeout(() => {\n          setShow(false);\n          dispatch(getschedulers());\n        }, 2000);\n      }\n    }\n  }\n\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create a Scheduler</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Scheduler Name: </Form.Label>\n              <Form.Control\n                value={scheduler.name}\n                onChange={(e) =>\n                  setScheduler({ ...scheduler, name: e.target.value })\n                }\n                required\n                type=\"text\"\n                placeholder=\"Enter a Name\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Scheduler Type:</Form.Label>\n              <Form.Control\n                value={scheduler.scheduleType}\n                onChange={(e) =>\n                  setScheduler({ ...scheduler, scheduleType: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"PARTICULAR\">Specific Time</option>\n                <option value=\"INTERVAL\">Interval</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                Schedule\n                {scheduler.scheduleType === \"PARTICULAR\"\n                  ? \" Time:\"\n                  : \" Interval(in Minutes):\"}\n              </Form.Label>\n              {scheduler.scheduleType === \"PARTICULAR\" && (\n                <Form.Control\n                  value={`${scheduler.time.hour}:${scheduler.time.minute}`}\n                  onChange={(e) => {\n                    let t = String(e.target.value);\n                    let p = t.split(\":\");\n                    setScheduler({\n                      ...scheduler,\n                      time: { ...scheduler.time, hour: p[0], minute: p[1] },\n                    });\n                  }}\n                  required\n                  type=\"time\"\n                />\n              )}\n              {scheduler.scheduleType === \"INTERVAL\" && (\n                <Form.Control\n                  value={scheduler.time.duration}\n                  onChange={(e) => {\n                    setScheduler({\n                      ...scheduler,\n                      time: { ...scheduler.time, duration: e.target.value },\n                    });\n                  }}\n                  required\n                  type=\"number\"\n                  step=\"10\"\n                  min=\"10\"\n                />\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Functionality:</Form.Label>\n              <Form.Control\n                required\n                value={scheduler.functionality}\n                onChange={(e) =>\n                  setScheduler({ ...scheduler, functionality: e.target.value })\n                }\n                as=\"select\"\n              >\n                {options.map((e) => {\n                  return (\n                    <option key={e.id} value={e.name}>\n                      {e.name}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Scheduler Triggers:</Form.Label>\n              <Chips\n                required\n                placeholder=\"Add Weekdays Tags Here\"\n                value={scheduler.weekdays}\n                suggestions={[\n                  \"Sunday\",\n                  \"Monday\",\n                  \"Tuesday\",\n                  \"Wednesday\",\n                  \"Thursday\",\n                  \"Friday\",\n                  \"Saturday\",\n                ]}\n                onChange={(e) => setScheduler({ ...scheduler, weekdays: e })}\n              />\n            </Form.Group>\n            <Button\n              disabled={schedulers.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {schedulers.cisLoading ? (\n                <Spinner animation=\"border\" />\n              ) : (\n                \"Create\"\n              )}\n            </Button>\n            {schedulers.userc && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{schedulers.userc}</Alert>\n              </Form.Group>\n            )}\n            {schedulers.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{schedulers.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <UpScheduler show={showU} close={handleCloseU} e={up} id={id} />\n      <Row className=\"justify-content-md-center\">\n        <Col md={4}>\n          <h1>Scheduler Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Scheduler Name</th>\n                <th>Type</th>\n                <th>Functionality</th>\n                <th>Triggers</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!schedulers.isLoading &&\n                schedulers.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.name}</td>\n                      <td>\n                        {e.scheduleType === \"PARTICULAR\"\n                          ? \"Specific Time\"\n                          : \"Interval\"}\n                      </td>\n                      <td>{e.functionality}</td>\n                      <td>{e.scheduledAt}</td>\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            deleteScheduler(e._id);\n                            setTimeout(() => {\n                              dispatch(getschedulers());\n                            }, 1000);\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n\n                        <IconButton\n                          onClick={() => {\n                            setId(e._id);\n                            setTimeout(() => handleShowU(e), 1000);\n                          }}\n                        >\n                          <UpdateIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {schedulers.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!schedulers.isLoading && schedulers.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No Scheduler Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default Scheduler;\n","export function filterSymbol(list, type) {\n  if (type === \"All\") {\n    return list;\n  }\n  let listr = [];\n  list.forEach(function (e) {\n    if (e.quoteType === type) listr.push(e);\n  });\n  return listr;\n}\nexport function filterAdmin(list) {\n  list = list.filter((e) => e.email !== \"keshavsingh200100@gmail.com\");\n  return list;\n}\n","import {\n  userSuccess,\n  userFailure,\n  userRequest,\n  cuserSuccess,\n  cuserFailure,\n  cuserRequest,\n} from \"../actions/adminuser\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/users/Adm/`;\n\nexport const getAdminUsers = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(userRequest());\n\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n\n      dispatch(userSuccess(users));\n    } catch (e) {\n      dispatch(userFailure(e.message));\n    }\n  };\n};\n\nexport const createAdminUser = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cuserRequest());\n\n      const res = await axios.post(API_URL, data, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n\n      dispatch(cuserSuccess(users));\n      dispatch(getAdminUsers());\n      // window.location.reload();\n    } catch (e) {\n      dispatch(cuserFailure(e.message));\n    }\n  };\n};\n\nexport const deleteAdmin = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(API_URL + id, {\n        headers: authHeader(),\n      });\n      dispatch(getAdminUsers());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const updateAdmin = (id, toggle) => {\n  return async (dispatch) => {\n    try {\n      await axios.put(\n        API_URL + id,\n        { superUser: !toggle },\n        {\n          headers: authHeader(),\n        }\n      );\n      dispatch(getAdminUsers());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n","import {\n  ADMINUSER_FAILURE,\n  ADMINUSER_SUCCESS,\n  ADMINUSER_REQUEST,\n  CADMINUSER_FAILURE,\n  CADMINUSER_SUCCESS,\n  CADMINUSER_REQUEST,\n} from \"./types\";\n\nexport function userSuccess(user) {\n  return {\n    type: ADMINUSER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function userRequest() {\n  return {\n    type: ADMINUSER_REQUEST,\n  };\n}\n\nexport function userFailure(err) {\n  return { type: ADMINUSER_FAILURE, payload: err };\n}\n\nexport function cuserSuccess(user) {\n  return {\n    type: CADMINUSER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function cuserRequest() {\n  return {\n    type: CADMINUSER_REQUEST,\n  };\n}\n\nexport function cuserFailure(err) {\n  return { type: CADMINUSER_FAILURE, payload: err };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { filterAdmin } from \"../utils/symbolFilters\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Table,\n  Modal,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { IconButton } from \"@material-ui/core\";\nimport {\n  getAdminUsers,\n  createAdminUser,\n  deleteAdmin,\n  updateAdmin,\n} from \"../services/adminuser.service\";\nimport { getTime } from \"../utils/getTime\";\n\nfunction AdminUser() {\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [superUser, setsuperUser] = useState(\"no\");\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  let count = 0;\n  const dispatch = useDispatch();\n  const adminuser = useSelector((state) => state.adminuser);\n  useEffect(() => {\n    dispatch(getAdminUsers());\n  }, [dispatch]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(\n      createAdminUser({\n        name: name,\n        email: email,\n        superUser: superUser === \"yes\" ? true : false,\n      })\n    );\n    if (adminuser.err.length === 0) {\n      setEmail(\"\");\n      setName(\"\");\n      setsuperUser(\"no\");\n      setShow(false);\n    }\n  }\n\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create an Admin User</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Name: </Form.Label>\n              <Form.Control\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n                type=\"text\"\n                placeholder=\"Enter a Name\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email: </Form.Label>\n              <Form.Control\n                required\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                type=\"email\"\n                placeholder=\"Enter an Email Id\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>superUser</Form.Label>\n              <Form.Control\n                onChange={(e) => setsuperUser(e.target.value)}\n                required\n                value={superUser}\n                as=\"select\"\n              >\n                <option value=\"yes\">Yes</option>\n                <option value=\"no\">No</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button\n              disabled={adminuser.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {adminuser.cisLoading ? <Spinner animation=\"border\" /> : \"Create\"}\n            </Button>\n            {adminuser.userc && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{adminuser.userc}</Alert>\n              </Form.Group>\n            )}\n            {adminuser.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{adminuser.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Row className=\"justify-content-md-center\">\n        <Col md={5}>\n          <h1>Admin User Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>superUser</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!adminuser.isLoading &&\n                filterAdmin(adminuser.users).map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.name}</td>\n                      <td>{e.email}</td>\n                      <td>\n                        {e.superUser ? \"Yes\" : \"No\"}\n\n                        <IconButton\n                          disabled={\n                            !!(\n                              e._id ===\n                              JSON.parse(localStorage.getItem(\"user\")).id\n                            )\n                          }\n                          onClick={() => {\n                            dispatch(updateAdmin(e._id, e.superUser));\n                          }}\n                        >\n                          <UpdateIcon />\n                        </IconButton>\n                      </td>\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          disabled={\n                            !!(\n                              e._id ===\n                              JSON.parse(localStorage.getItem(\"user\")).id\n                            )\n                          }\n                          onClick={() => {\n                            dispatch(deleteAdmin(e._id));\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {adminuser.isLoading && adminuser.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default AdminUser;\n","export const List = {\n  ETF: [\"open\", \"high\", \"low\", \"close\", \"volume\"],\n  HISTORICAL: [\"realOpen\", \"eps\"],\n  TICKER: [\n    \"realOpen\",\n    \"eps\",\n    \"profitMargin\",\n    \"realClose\",\n    \"realHigh\",\n    \"realLow\",\n    \"changePercent\",\n    \"change\",\n    \"previousClose\",\n    \"volume\",\n    \"pegRatio\",\n    \"peRatio\",\n    \"pbRatio\",\n    \"dividendYield\",\n    \"dividendPayoutRatio\",\n    \"dividendperShare\",\n    \"sharesOutstanding\",\n    \"MarketCapitalization\",\n    \"ftweekhigh\",\n    \"ftweeklow\",\n  ],\n  NEWS: [\n    \"publishedAt\",\n    \"author\",\n    \"title\",\n    \"description\",\n    \"url\",\n    \"urlToImage\",\n    \"content\",\n  ],\n};\n","import {\n  urlSuccess,\n  urlFailure,\n  urlRequest,\n  curlSuccess,\n  curlFailure,\n  curlRequest,\n} from \"../actions/urlapi\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/urlspecific/`;\nconst message = \"Please Logout and Try Again\";\nexport const getUrls = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(urlRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n\n      const urls = res.data.data;\n\n      dispatch(urlSuccess(urls));\n    } catch (e) {\n      dispatch(urlFailure(e.message));\n    }\n  };\n};\n\nexport const createUrls = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(curlRequest());\n      const res = await axios.post(API_URL, data, {\n        headers: authHeader(),\n      });\n\n      const urls = res.data.data;\n\n      dispatch(curlSuccess(urls));\n    } catch (e) {\n      dispatch(curlFailure(e.message));\n    }\n  };\n};\n\nexport const deleteUrl = async (id) => {\n  try {\n    await axios.delete(API_URL + id, {\n      headers: authHeader(),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import {\n  URL_FAILURE,\n  URL_SUCCESS,\n  URL_REQUEST,\n  CURL_FAILURE,\n  CURL_SUCCESS,\n  CURL_REQUEST,\n} from \"./types\";\n\nexport function urlSuccess(user) {\n  return {\n    type: URL_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function urlRequest() {\n  return {\n    type: URL_REQUEST,\n  };\n}\n\nexport function urlFailure(err) {\n  return { type: URL_FAILURE, payload: err };\n}\n\nexport function curlSuccess(user) {\n  return {\n    type: CURL_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function curlRequest() {\n  return {\n    type: CURL_REQUEST,\n  };\n}\n\nexport function curlFailure(err) {\n  return { type: CURL_FAILURE, payload: err };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Spinner,\n  Modal,\n  Table,\n  Popover,\n  OverlayTrigger,\n  Alert,\n} from \"react-bootstrap\";\nimport _ from \"underscore\";\nimport validUrl from \"../utils/validUrl\";\nimport { List } from \"../utils/dbFields\";\nimport ChipInput from \"material-ui-chip-input\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport { getUrls, createUrls, deleteUrl } from \"../services/urlapi.service\";\nimport { getTime } from \"../utils/getTime\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport { IconButton } from \"@material-ui/core\";\nimport { FormatColorResetRounded } from \"@material-ui/icons\";\n\nconst popover = (val) => {\n  return (\n    <Popover id=\"sds\">\n      <Popover.Content>\n        {val.map((e) => {\n          return <p>{e}</p>;\n        })}\n      </Popover.Content>\n    </Popover>\n  );\n};\n\nconst popovero = (val) => {\n  return (\n    <Popover id=\"sds\">\n      <Popover.Title as=\"h3\">Keys Mapping</Popover.Title>\n      <Popover.Content>\n        <Table responsive striped bordered hover>\n          <thead>\n            <tr>\n              <th>KeyName</th>\n              <th>MapsTo</th>\n            </tr>\n          </thead>\n          <tbody>\n            {val.map((e) => {\n              return (\n                <tr key={e._id}>\n                  <td>{e.keyName}</td>\n                  <td>{e.mapsTo}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Popover.Content>\n    </Popover>\n  );\n};\n\nfunction UrlApi() {\n  const [field, setField] = useState({ key: \"\", map: \"\" });\n  const [urlspec, setUrlSpec] = useState({\n    name: \"\",\n    keys: [],\n    isIpBlocking: false,\n    batch: 1,\n    restrictions: { count: 5, per: \"MINUTE\" },\n    responseKeys: [],\n    mapsToSchema: \"TICKER\",\n    url: \"\",\n  });\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  let count = 0;\n  const dispatch = useDispatch();\n  const urlapi = useSelector((state) => state.urlapi);\n  useEffect(() => {\n    dispatch(getUrls());\n  }, [dispatch]);\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (\n      urlspec.keys.length > 0 &&\n      urlspec.name.length > 0 &&\n      urlspec.responseKeys.length > 0 &&\n      urlspec.restrictions &&\n      urlspec.restrictions.count !== undefined &&\n      urlspec.url.length > 0 &&\n      validUrl(urlspec.url) === true\n    ) {\n      let p;\n      p = {\n        name: urlspec.name,\n        url: urlspec.url,\n        restrictions: urlspec.restrictions,\n        keys: urlspec.keys,\n        mapsToSchema: urlspec.mapsToSchema,\n        responseKeys: urlspec.responseKeys,\n        batch: Number(urlspec.batch),\n        isIpBlocking: urlspec.isIpBlocking,\n      };\n\n      dispatch(createUrls(p));\n      if (!urlapi.err) {\n        setTimeout(() => {\n          setShow(false);\n          dispatch(getUrls());\n        }, 2000);\n      }\n    }\n  }\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create an API Functionality:</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Functionality: </Form.Label>\n              <Form.Control\n                value={urlspec.name}\n                onChange={(e) =>\n                  setUrlSpec({ ...urlspec, name: e.target.value })\n                }\n                required\n                type=\"text\"\n                placeholder=\"Enter a Functionality Name\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Type:</Form.Label>\n              <Form.Control\n                value={urlspec.mapsToSchema}\n                onChange={(e) =>\n                  setUrlSpec({ ...urlspec, mapsToSchema: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"NEWS\">News</option>\n                <option value=\"TICKER\">TICKER (for Stocks)</option>\n                <option value=\"ETF\">ETF</option>\n                <option value=\"HISTORICAL\">HISTORICAL</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check\n                onChange={(e) =>\n                  setUrlSpec({\n                    ...urlspec,\n                    isIpBlocking: !urlspec.isIpBlocking,\n                  })\n                }\n                type=\"checkbox\"\n                label=\"IP Blocking\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Restrictions (on API):</Form.Label>\n              <Form.Control\n                value={urlspec.restrictions.count}\n                required\n                onChange={(e) =>\n                  setUrlSpec({\n                    ...urlspec,\n                    restrictions: {\n                      ...urlspec.restrictions,\n                      count: e.target.value,\n                    },\n                  })\n                }\n                min=\"0\"\n                type=\"number\"\n                placeholder=\"Choose a Count\"\n              />\n\n              <Form.Control\n                value={urlspec.restrictions.per}\n                onChange={(e) =>\n                  setUrlSpec({\n                    ...urlspec,\n                    restrictions: {\n                      ...urlspec.restrictions,\n                      per: e.target.value,\n                    },\n                  })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"SECOND\">Second</option>\n                <option value=\"MINUTE\">Minute</option>\n                <option value=\"HOUR\">Hour</option>\n                <option value=\"DAY\">Day</option>\n                <option value=\"MONTH\">Month</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>URL: </Form.Label>\n              <Form.Control\n                value={urlspec.url}\n                onChange={(e) =>\n                  setUrlSpec({ ...urlspec, url: e.target.value })\n                }\n                required\n                type=\"text\"\n                placeholder=\"Enter a url\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Batch:</Form.Label>\n              <Form.Control\n                value={urlspec.batch}\n                onChange={(e) =>\n                  setUrlSpec({ ...urlspec, batch: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </Form.Control>\n            </Form.Group>\n\n            <ChipInput\n              label=\"API Keys\"\n              value={urlspec.keys}\n              onAdd={(chip) =>\n                setUrlSpec({ ...urlspec, keys: [...urlspec.keys, chip] })\n              }\n              onDelete={(chip, index) =>\n                setUrlSpec({\n                  ...urlspec,\n                  keys: _.without(urlspec.keys, chip),\n                })\n              }\n            />\n            <hr />\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Table responsive striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Keys</th>\n                    <th>Maps To</th>\n                    <th>Option</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <Form.Control\n                        value={field.key}\n                        onChange={(e) =>\n                          setField({ ...field, key: e.target.value })\n                        }\n                        type=\"text\"\n                        placeholder=\"Enter a Key Field\"\n                      />\n                    </td>\n                    <td>\n                      <Form.Control\n                        value={field.map}\n                        onChange={(e) =>\n                          setField({ ...field, map: e.target.value })\n                        }\n                        required\n                        as=\"select\"\n                      >\n                        {List[urlspec.mapsToSchema].map((e) => {\n                          return <option value={e}>{e}</option>;\n                        })}\n                      </Form.Control>\n                    </td>\n                    <td>\n                      <IconButton\n                        onClick={() => {\n                          if (field.key.trim() && field.map.trim()) {\n                            setUrlSpec({\n                              ...urlspec,\n                              responseKeys: [\n                                ...urlspec.responseKeys,\n                                { keyName: field.key, mapsTo: field.map },\n                              ],\n                            });\n                            setField({ key: \"\", map: \"\" });\n                          }\n                        }}\n                      >\n                        <AddCircleIcon color=\"primary\" />\n                      </IconButton>\n                    </td>\n                  </tr>\n                  {urlspec.responseKeys.map((e, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{e.keyName}</td>\n                        <td>{e.mapsTo}</td>\n                        <td>\n                          {\" \"}\n                          <IconButton\n                            onClick={() => {\n                              setUrlSpec({\n                                ...urlspec,\n                                responseKeys: _.reject(\n                                  urlspec.responseKeys,\n                                  function (num) {\n                                    return num === urlspec.responseKeys[index];\n                                  }\n                                ),\n                              });\n                            }}\n                          >\n                            <RemoveCircleIcon color=\"primary\" />\n                          </IconButton>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Form.Group>\n            <Button\n              disabled={urlapi.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {urlapi.cisLoading ? <Spinner animation=\"border\" /> : \"Create\"}\n            </Button>\n            {urlapi.userc && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{urlapi.userc}</Alert>\n              </Form.Group>\n            )}\n            {urlapi.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{urlapi.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Row className=\"justify-content-sm-center\">\n        <Col sm={5}>\n          <h1>Core API Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Alert variant=\"info\">\n            Note: Scheduler associated with functionality must be deleted\n            manually after deletion of Functionality. If not done, it may lead\n            to malfunctioning of some Schedulers.\n          </Alert>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Functionality</th>\n                <th>Type</th>\n                <th>url</th>\n                <th>Response Keys</th>\n                <th>Batch</th>\n                <th>IP Blocking</th>\n                <th>Restriction Count</th>\n                <th>Restriction Based</th>\n                <th>API Keys</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!urlapi.isLoading &&\n                urlapi.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.name}</td>\n                      <td>{e.mapsToSchema}</td>\n                      <td>{e.url}</td>\n                      <td>\n                        <OverlayTrigger\n                          trigger=\"hover\"\n                          placement=\"bottom\"\n                          delay={{ show: 250, hide: 2000 }}\n                          overlay={popovero(e.responseKeys)}\n                        >\n                          <IconButton>\n                            <ViewListIcon color=\"dark\" />\n                          </IconButton>\n                        </OverlayTrigger>\n                      </td>\n                      <td>{e.batch}</td>\n                      <td>{e.isIpBlocking === true ? \"Yes\" : \"No\"}</td>\n                      <td>{e.restrictions.count}</td>\n                      <td>{e.restrictions.per}</td>\n                      <td>\n                        <OverlayTrigger\n                          trigger=\"hover\"\n                          placement=\"right\"\n                          delay={{ show: 250, hide: 1000 }}\n                          overlay={popover(e.keys)}\n                        >\n                          <IconButton>\n                            <ViewListIcon color=\"dark\" />\n                          </IconButton>\n                        </OverlayTrigger>\n                      </td>\n\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          disabled={\n                            !!(\n                              false ===\n                              JSON.parse(localStorage.getItem(\"user\")).superUser\n                            )\n                          }\n                          onClick={() => {\n                            deleteUrl(e._id);\n                            setTimeout(() => {\n                              dispatch(getUrls());\n                            }, 1000);\n                          }}\n                        >\n                          <DeleteIcon color=\"dark\" />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {urlapi.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!urlapi.isLoading && urlapi.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No API Functionality Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default UrlApi;\n","export default function validURL(str) {\n  var pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n","import {\n  PORTFOLIO_FAILURE,\n  PORTFOLIO_SUCCESS,\n  PORTFOLIO_REQUEST,\n  CPORTFOLIO_FAILURE,\n  CPORTFOLIO_SUCCESS,\n  CPORTFOLIO_REQUEST,\n} from \"./types\";\n\nexport function portfolioSuccess(user) {\n  return {\n    type: PORTFOLIO_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function portfolioRequest() {\n  return {\n    type: PORTFOLIO_REQUEST,\n  };\n}\n\nexport function portfolioFailure(err) {\n  return { type: PORTFOLIO_FAILURE, payload: err };\n}\n\nexport function cportfolioSuccess(user) {\n  return {\n    type: CPORTFOLIO_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function cportfolioRequest() {\n  return {\n    type: CPORTFOLIO_REQUEST,\n  };\n}\n\nexport function cportfolioFailure(err) {\n  return { type: CPORTFOLIO_FAILURE, payload: err };\n}\n","import {\n  portfolioSuccess,\n  portfolioFailure,\n  portfolioRequest,\n  cportfolioSuccess,\n  cportfolioFailure,\n  cportfolioRequest,\n} from \"../actions/portfolio\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/portfolio/`;\n\nexport const getPortfolios = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(portfolioRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const portfolios = res.data.data;\n      dispatch(portfolioSuccess(portfolios));\n    } catch (e) {\n      dispatch(portfolioFailure(e.message));\n    }\n  };\n};\n\nexport const deletePortfolio = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(API_URL + id, {\n        headers: authHeader(),\n      });\n      dispatch(getPortfolios());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const createPortfolio = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cportfolioRequest());\n\n      const res = await axios.post(API_URL, data, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n\n      dispatch(cportfolioSuccess(users));\n      dispatch(getPortfolios());\n      // window.location.reload();\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      dispatch(cportfolioFailure(message));\n    }\n  };\n};\n\nexport const updatePortfolio = (data, id) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cportfolioRequest());\n\n      const res = await axios.put(API_URL + id, data, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n\n      dispatch(cportfolioSuccess(users));\n      dispatch(getPortfolios());\n      // window.location.reload();\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      dispatch(cportfolioFailure(message));\n    }\n  };\n};\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1`;\n\nexport const getETFs = async (val) => {\n  try {\n    const res = await axios.get(`${API_URL}/etf/`, {\n      headers: authHeader(),\n    });\n    let etfs = res.data.data;\n    if (res.data.count === 0) return [];\n    etfs = etfs.map((e) => {\n      return e.symbol;\n    });\n    if (val === \"*\") return etfs;\n    etfs = etfs.filter(function (str) {\n      return str.includes(val.toUpperCase());\n    });\n    return etfs;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getTickers = async (val) => {\n  try {\n    const res = await axios.get(`${API_URL}/tickers`, {\n      headers: authHeader(),\n    });\n    let tickers = res.data.data;\n    if (res.data.count === 0) return [];\n    tickers = tickers.map((e) => {\n      return e.symbol;\n    });\n    if (val === \"*\") return tickers;\n    tickers = tickers.filter(function (str) {\n      return str.includes(val.toUpperCase());\n    });\n    return tickers;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\n\nimport Chips from \"react-chips\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Popover,\n  OverlayTrigger,\n  Table,\n  Modal,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport {\n  getPortfolios,\n  deletePortfolio,\n  createPortfolio,\n  updatePortfolio,\n} from \"../services/portfolio.service\";\nimport { getETFs } from \"../services/ticker.service\";\nimport { getTime } from \"../utils/getTime\";\n\nconst Model = (props) => {\n  const [local, setLocal] = useState({\n    name: \"\",\n    riskTolerance: \"LOW\",\n    us: [],\n    usDefault: \"\",\n    usPercent: undefined,\n    intExUS: [],\n    intExUSDefault: \"\",\n    intExUSPercent: undefined,\n    bondPercent: undefined,\n    bondDefault: \"\",\n    bond: [],\n    region: \"USA\",\n  });\n  useEffect(() => {\n    setLocal({\n      name: props.e.name,\n      riskTolerance: props.e.riskTolerance,\n      us: props.e.us,\n      usDefault: props.e.usDefault,\n      usPercent: props.e.usPercent,\n      intExUS: props.e.intExUS,\n      intExUSDefault: props.e.intExUSDefault,\n      intExUSPercent: props.e.intExUSPercent,\n      bondPercent: props.e.bondPercent,\n      bondDefault: props.e.bondDefault,\n      bond: props.e.bond,\n      region: props.e.region,\n    });\n  }, [props]);\n  const dispatch = useDispatch();\n  const portfolio = useSelector((state) => state.portfolio);\n  useEffect(() => {\n    dispatch(getPortfolios());\n  }, [dispatch]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    let p = local;\n    if (p.usDefault.length === 0 && p.us.length > 0) {\n      p = { ...p, usDefault: p.us[0] };\n    }\n    if (p.intExUSDefault.length === 0 && p.intExUS.length > 0) {\n      p = { ...p, intExUSDefault: p.intExUS[0] };\n    }\n    if (p.bondDefault.length === 0 && p.bond.length > 0) {\n      p = { ...p, bondDefault: p.bond[0] };\n    }\n\n    dispatch(updatePortfolio(p, props.id));\n\n    props.close();\n  }\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"static\"\n      show={props.show}\n      onHide={props.close}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Update a Risk Profile</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Risk Profile: </Form.Label>\n            <Form.Control\n              disabled\n              value={local.name}\n              onChange={(e) => setLocal({ ...local, name: e.target.value })}\n              required\n              type=\"text\"\n              placeholder=\"Enter a Name\"\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Type:</Form.Label>\n            <Form.Control\n              value={local.riskTolerance}\n              onChange={(e) =>\n                setLocal({ ...local, riskTolerance: e.target.value })\n              }\n              required\n              as=\"select\"\n            >\n              <option value=\"LOW\">Low</option>\n              <option value=\"MEDIUM\">Medium</option>\n              <option value=\"HIGH\">High</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Region:</Form.Label>\n            <Form.Control\n              disabled\n              value={local.region}\n              onChange={(e) => setLocal({ ...local, region: e.target.value })}\n              required\n              as=\"select\"\n            >\n              <option value=\"USA\">USA</option>\n              <option value=\"Europe\">Europe</option>\n              <option value=\"Other\">Other</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>US Percent: </Form.Label>\n            <Form.Control\n              value={local.usPercent}\n              onChange={(e) =>\n                setLocal({ ...local, usPercent: Number(e.target.value) })\n              }\n              required\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              placeholder=\"Enter a Percent %\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>US Default Fund:</Form.Label>\n            <Form.Control\n              value={local.usDefault}\n              onChange={(e) =>\n                setLocal({ ...local, usDefault: e.target.value })\n              }\n              required\n              as=\"select\"\n            >\n              {local.us.map((e) => {\n                return <option value={e}>{e}</option>;\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect2\">\n            <Chips\n              placeholder=\"Enter US Tags here\"\n              value={local.us}\n              fetchSuggestions={(val) => getETFs(val)}\n              onChange={(e) => setLocal({ ...local, us: e })}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>International Excluding US Percent: </Form.Label>\n            <Form.Control\n              value={local.intExUSPercent}\n              onChange={(e) =>\n                setLocal({ ...local, intExUSPercent: Number(e.target.value) })\n              }\n              required\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              placeholder=\"Enter a Percent %\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>International Excluding US Default Fund:</Form.Label>\n            <Form.Control\n              value={\n                local.intExUSDefault ||\n                (local.intExUS.length !== 0 && local.intExUS[0])\n              }\n              onChange={(e) =>\n                setLocal({ ...local, intExUSDefault: e.target.value })\n              }\n              required\n              as=\"select\"\n            >\n              {local.intExUS.map((e, ind) => {\n                return (\n                  <option key={ind} value={e}>\n                    {e}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect2\">\n            <Chips\n              placeholder=\"Enter Int ExUS Tags here\"\n              value={local.intExUS}\n              onChange={(e) => setLocal({ ...local, intExUS: e })}\n              fetchSuggestions={(val) => getETFs(val)}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Bond Percent: </Form.Label>\n            <Form.Control\n              value={local.bondPercent}\n              onChange={(e) =>\n                setLocal({ ...local, bondPercent: Number(e.target.value) })\n              }\n              required\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              placeholder=\"Enter a Percent %\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Bond Default:</Form.Label>\n            <Form.Control\n              value={local.bondDefault}\n              onChange={(e) =>\n                setLocal({ ...local, bondDefault: e.target.value })\n              }\n              required\n              as=\"select\"\n            >\n              {local.bond.map((e) => {\n                return <option value={e}>{e}</option>;\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect2\">\n            <Chips\n              placeholder=\"Enter Bond Tags here\"\n              value={local.bond}\n              onChange={(e) => setLocal({ ...local, bond: e })}\n              fetchSuggestions={(val) => getETFs(val)}\n            />\n          </Form.Group>\n          <Button\n            disabled={portfolio.cisLoading}\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            {portfolio.cisLoading ? <Spinner animation=\"border\" /> : \"Update\"}\n          </Button>\n\n          {portfolio.err && (\n            <Form.Group controlId=\"formBasicEmail\">\n              <Alert variant=\"danger\">{portfolio.err}</Alert>\n            </Form.Group>\n          )}\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nfunction Portfolio() {\n  const [local, setLocal] = useState({\n    name: \"\",\n    riskTolerance: \"LOW\",\n    us: [],\n    usDefault: \"\",\n    usPercent: undefined,\n    intExUS: [],\n    intExUSDefault: \"\",\n    intExUSPercent: undefined,\n    bondPercent: undefined,\n    bondDefault: \"\",\n    bond: [],\n    region: \"USA\",\n  });\n  const [show, setShow] = useState(false);\n  const [showu, setShowU] = useState(false);\n  const handleCloseU = () => setShowU(false);\n  const [id, setId] = useState(\"\");\n  const handleShowU = (e) => {\n    setUp(e);\n    setShowU(true);\n  };\n  const [up, setUp] = useState({\n    name: \"\",\n    riskTolerance: \"LOW\",\n    us: [],\n    usDefault: \"\",\n    usPercent: undefined,\n    intExUS: [],\n    intExUSDefault: \"\",\n    intExUSPercent: undefined,\n    bondPercent: undefined,\n    bondDefault: \"\",\n    bond: [],\n    region: \"USA\",\n  });\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  let count = 0;\n  const dispatch = useDispatch();\n  const portfolio = useSelector((state) => state.portfolio);\n  useEffect(() => {\n    dispatch(getPortfolios());\n  }, [dispatch]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    let p = local;\n    if (p.usDefault.length === 0 && p.us.length > 0) {\n      p = { ...p, usDefault: p.us[0] };\n    }\n    if (p.intExUSDefault.length === 0 && p.intExUS.length > 0) {\n      p = { ...p, intExUSDefault: p.intExUS[0] };\n    }\n    if (p.bondDefault.length === 0 && p.bond.length > 0) {\n      p = { ...p, bondDefault: p.bond[0] };\n    }\n    console.log(p);\n    dispatch(createPortfolio(p));\n\n    if (!portfolio.err) {\n      setLocal({\n        name: \"\",\n        riskTolerance: \"LOW\",\n        us: [],\n        usDefault: \"\",\n        usPercent: undefined,\n        intExUS: [],\n        intExUSDefault: \"\",\n        intExUSPercent: undefined,\n        bondPercent: undefined,\n        bondDefault: \"\",\n        bond: [],\n        region: \"USA\",\n      });\n\n      setShow(false);\n    }\n  }\n\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create a Risk Profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Risk Profile: </Form.Label>\n              <Form.Control\n                value={local.name}\n                onChange={(e) => setLocal({ ...local, name: e.target.value })}\n                required\n                type=\"text\"\n                placeholder=\"Enter a Name\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Type:</Form.Label>\n              <Form.Control\n                value={local.riskTolerance}\n                onChange={(e) =>\n                  setLocal({ ...local, riskTolerance: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"LOW\">Low</option>\n                <option value=\"MEDIUM\">Medium</option>\n                <option value=\"HIGH\">High</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Region:</Form.Label>\n              <Form.Control\n                value={local.region}\n                onChange={(e) => setLocal({ ...local, region: e.target.value })}\n                required\n                as=\"select\"\n              >\n                <option value=\"USA\">USA</option>\n                <option value=\"Europe\">Europe</option>\n                <option value=\"Other\">Other</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>US Percent: </Form.Label>\n              <Form.Control\n                value={local.usPercent}\n                onChange={(e) =>\n                  setLocal({ ...local, usPercent: Number(e.target.value) })\n                }\n                required\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                placeholder=\"Enter a Percent %\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>US Default Fund:</Form.Label>\n              <Form.Control\n                value={local.usDefault}\n                onChange={(e) =>\n                  setLocal({ ...local, usDefault: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                {local.us.map((e) => {\n                  return <option value={e}>{e}</option>;\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n              <Chips\n                placeholder=\"Enter US Tickers here\"\n                value={local.us}\n                fetchSuggestions={(val) => getETFs(val)}\n                onChange={(e) => setLocal({ ...local, us: e })}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>International Excluding US Percent: </Form.Label>\n              <Form.Control\n                value={local.intExUSPercent}\n                onChange={(e) =>\n                  setLocal({ ...local, intExUSPercent: Number(e.target.value) })\n                }\n                required\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                placeholder=\"Enter a Percent %\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>International Excluding US Default Fund:</Form.Label>\n              <Form.Control\n                value={\n                  local.intExUSDefault ||\n                  (local.intExUS.length !== 0 && local.intExUS[0])\n                }\n                onChange={(e) =>\n                  setLocal({ ...local, intExUSDefault: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                {local.intExUS.map((e, ind) => {\n                  return (\n                    <option key={ind} value={e}>\n                      {e}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n              <Chips\n                placeholder=\"Enter Int ExUS Tickers here\"\n                value={local.intExUS}\n                onChange={(e) => setLocal({ ...local, intExUS: e })}\n                fetchSuggestions={(val) => getETFs(val)}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Bond Percent: </Form.Label>\n              <Form.Control\n                value={local.bondPercent}\n                onChange={(e) =>\n                  setLocal({ ...local, bondPercent: Number(e.target.value) })\n                }\n                required\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                placeholder=\"Enter a Percent %\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Bond Default:</Form.Label>\n              <Form.Control\n                value={local.bondDefault}\n                onChange={(e) =>\n                  setLocal({ ...local, bondDefault: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                {local.bond.map((e) => {\n                  return <option value={e}>{e}</option>;\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n              <Chips\n                placeholder=\"Enter Bond Tickers here\"\n                value={local.bond}\n                onChange={(e) => setLocal({ ...local, bond: e })}\n                fetchSuggestions={(val) => getETFs(val)}\n              />\n            </Form.Group>\n            <Button\n              disabled={portfolio.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {portfolio.cisLoading ? <Spinner animation=\"border\" /> : \"Create\"}\n            </Button>\n\n            {portfolio.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{portfolio.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Model show={showu} close={handleCloseU} e={up} id={id} />\n      <Row className=\"justify-content-sm-center\">\n        <Col sm={6}>\n          <h1>Portfolio Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Risk Profile</th>\n                <th>Type</th>\n                <th>Region</th>\n                <th>US Default Fund</th>\n                <th>US</th>\n                <th>US Percent</th>\n                <th>International Excluding US Default Fund</th>\n                <th>International Excluding US</th>\n                <th>International Excluding US Percent</th>\n                <th>Bond Default Fund</th>\n                <th>Bond</th>\n                <th>Bond Percent</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!portfolio.isLoading &&\n                portfolio.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.name}</td>\n                      <td>{e.riskTolerance}</td>\n                      <td>{e.region}</td>\n                      <td>{e.usDefault}</td>\n                      <td>\n                        {e.us.map((e) => {\n                          return <p>{e}</p>;\n                        })}\n                      </td>\n                      <td>{e.usPercent}%</td>\n                      <td>{e.intExUSDefault}</td>\n                      <td>\n                        {e.intExUS.map((e) => {\n                          return <p>{e}</p>;\n                        })}\n                      </td>\n                      <td>{e.intExUSPercent}%</td>\n                      <td>{e.bondDefault}</td>\n                      <td>\n                        {e.bond.map((e) => {\n                          return <p>{e}</p>;\n                        })}\n                      </td>\n                      <td>{e.bondPercent}%</td>\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            dispatch(deletePortfolio(e._id));\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n\n                        <IconButton\n                          onClick={() => {\n                            setId(e._id);\n                            setTimeout(() => handleShowU(e), 1000);\n                          }}\n                        >\n                          <UpdateIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {portfolio.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!portfolio.isLoading && portfolio.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No Portfolio Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default Portfolio;\n","import {\n  historicalSuccess,\n  historicalFailure,\n  historicalRequest,\n  chistoricalSuccess,\n  chistoricalFailure,\n  chistoricalRequest,\n} from \"../actions/historicaldata\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/historicalData/`;\n\nexport const getHistoricals = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(historicalRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const historicals = res.data.data;\n      dispatch(historicalSuccess(historicals));\n    } catch (e) {\n      dispatch(historicalFailure(e.message));\n    }\n  };\n};\n\nexport const createHistorical = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(chistoricalRequest());\n\n      const res = await axios.post(API_URL, data, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n\n      dispatch(chistoricalSuccess(users));\n\n      // window.location.reload();\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      dispatch(chistoricalFailure(message));\n    }\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Table,\n  Modal,\n  Spinner,\n  Badge,\n  Alert,\n} from \"react-bootstrap\";\nimport {\n  getHistoricals,\n  createHistorical,\n} from \"../services/historical.service\";\nimport { getTime } from \"../utils/getTime\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport { ShowChartOutlined } from \"@material-ui/icons\";\n\nfunction HistoricalData() {\n  const [show, setShow] = useState(false);\n  const [showU, setShowU] = useState(false);\n  const [filters, setFilters] = useState({\n    from: moment(\"2000-05-01\").format(\"YYYY-MM-DD\"),\n    to: moment(Date.now()).format(\"YYYY-MM-DD\"),\n  });\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseU = () => setShowU(false);\n  const handleShowU = () => setShowU(true);\n  const [disab, setDisab] = useState(false);\n  let count = 0;\n  const dispatch = useDispatch();\n  const historical = useSelector((state) => state.historical);\n  useEffect(() => {\n    dispatch(getHistoricals());\n  }, [dispatch]);\n\n  function creation() {\n    dispatch(createHistorical(filters));\n    setShowU(false);\n    if (!historical.err) {\n      setFilters({\n        from: moment(\"2000-05-01\").format(\"YYYY-MM-DD\"),\n        to: moment(Date.now()).format(\"YYYY-MM-DD\"),\n      });\n      setDisab(true);\n      setTimeout(() => {\n        setDisab(false);\n      }, 2400000);\n      setShow(false);\n    }\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    handleShowU();\n  }\n\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton disabled={disab} onClick={handleShow}>\n          <DeleteSweepIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n      <Modal\n        show={showU}\n        onHide={handleCloseU}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Are you Sure</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Doing this Inappropiately may result in loss of Historical Data which\n          affect Statistics Sections of Stocks, Indices, Industry ETF and also\n          Model Statistics.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"success\"\n            onClick={() => {\n              handleCloseU();\n            }}\n          >\n            Close it\n          </Button>\n          <Button onClick={creation} variant=\"danger\">\n            I am Aware\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Keep the Data You Want</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Start Date: </Form.Label>\n              <Form.Control\n                value={filters.from}\n                onChange={(e) =>\n                  setFilters({ ...filters, from: e.target.value })\n                }\n                required\n                type=\"date\"\n                min={moment(\"2000-01-01\").format(\"YYYY-MM-DD\")}\n                max={moment(Date.now()).format(\"YYYY-MM-DD\")}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>End Date: </Form.Label>\n              <Form.Control\n                value={filters.to}\n                onChange={(e) => setFilters({ ...filters, to: e.target.value })}\n                required\n                type=\"date\"\n                min={moment(\"2000-01-01\").format(\"YYYY-MM-DD\")}\n                max={moment(Date.now()).format(\"YYYY-MM-DD\")}\n              />\n            </Form.Group>\n\n            <Button\n              disabled={historical.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {historical.cisLoading ? (\n                <Spinner animation=\"border\" />\n              ) : (\n                \"Filter\"\n              )}\n            </Button>\n            {historical.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{historical.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Badge variant=\"danger\">Warning</Badge>\n          <Alert variant=\"danger\">This action affects Application Data</Alert>\n        </Modal.Footer>\n      </Modal>\n      <Row className=\"justify-content-md-center\">\n        <Col md={6}>\n          <h1>Historical Data Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Symbol</th>\n                <th>Historical Data Values</th>\n                <th>Start Date</th>\n                <th>End Date</th>\n                <th>Created</th>\n                <th>Updated</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!historical.isLoading &&\n                historical.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.symbol}</td>\n                      <td>{e[\"Data Count\"]}</td>\n                      <td>{e[\"End Date\"] && getTime(e[\"End Date\"])}</td>\n                      <td>{e[\"Start Date\"] && getTime(e[\"Start Date\"])}</td>\n                      <td>{e.createdAt && getTime(e.createdAt)}</td>\n                      <td>{e.updatedAt && getTime(e.updatedAt)}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {historical.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!historical.isLoading && historical.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No Historical Data Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default HistoricalData;\n","import {\n  HISTORICAL_FAILURE,\n  HISTORICAL_SUCCESS,\n  HISTORICAL_REQUEST,\n} from \"./types\";\n\nexport function historicalSuccess(user) {\n  return {\n    type: HISTORICAL_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function historicalRequest() {\n  return {\n    type: HISTORICAL_REQUEST,\n  };\n}\n\nexport function historicalFailure(err) {\n  return { type: HISTORICAL_FAILURE, payload: err };\n}\n\nexport function chistoricalSuccess(user) {\n  return {\n    type: HISTORICAL_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function chistoricalRequest() {\n  return {\n    type: HISTORICAL_REQUEST,\n  };\n}\n\nexport function chistoricalFailure(err) {\n  return { type: HISTORICAL_FAILURE, payload: err };\n}\n","import { symbolSuccess, symbolFailure, symbolRequest } from \"../actions/symbol\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/tickers/symbols/All`;\nconst message = \"Please Logout and Try Again\";\nexport const getSymbols = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(symbolRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const users = res.data.data;\n      dispatch(symbolSuccess(users));\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      dispatch(symbolFailure(message));\n    }\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Spinner,\n  Modal,\n  Table,\n  Badge,\n  Alert,\n} from \"react-bootstrap\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { getSymbols } from \"../services/symbol.service\";\nimport { getTime } from \"../utils/getTime\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { IconButton } from \"@material-ui/core\";\nimport { filterSymbol } from \"../utils/symbolFilters\";\nimport { CSVLink } from \"react-csv\";\n\nconst headers = [\n  { label: \"Name\", key: \"Name\" },\n  { label: \"Symbol\", key: \"symbol\" },\n  { label: \"Industry\", key: \"industry\" },\n  { label: \"QuoteType\", key: \"quoteType\" },\n];\n\nfunction Symbol() {\n  const [newSymbol, setNewSymbol] = useState({\n    name: \"\",\n    quoteType: \"EQUITY\",\n    symbol: \"\",\n    industry: \"\",\n  });\n\n  const [defaul, setDefaul] = useState(\"All\");\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  let count = 0;\n  const dispatch = useDispatch();\n  const symbol = useSelector((state) => state.symbol);\n  useEffect(() => {\n    dispatch(getSymbols());\n  }, [dispatch]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(e.target);\n    setShow(false);\n  }\n  const csvReport = {\n    data: filterSymbol(symbol.users, defaul),\n    headers: headers,\n    filename: \"Symbols.csv\",\n  };\n\n  const industry = [\n    \"Technology\",\n    \"Communication Services\",\n    \"Consumer Defensive\",\n    \"Healthcare\",\n    \"Consumer Cyclical\",\n    \"Utilities\",\n    \"Financial Services\",\n    \"Industrials\",\n    \"Basic Materials\",\n    \"Energy\",\n    \"Real Estate\",\n    \"Automotive\",\n    \"Biotechnology\",\n    \"Retail\",\n  ];\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create a Symbol</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Symbol:</Form.Label>\n              <Form.Control\n                value={newSymbol.symbol}\n                required\n                onChange={(e) =>\n                  setNewSymbol({ ...newSymbol, symbol: e.target.value })\n                }\n                type=\"text\"\n                placeholder=\"Enter a New Symbol\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name:</Form.Label>\n              <Form.Control required type=\"text\" placeholder=\"Enter a Name\" />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Quote Type:</Form.Label>\n              <Form.Control\n                value={newSymbol.quoteType}\n                onChange={(e) =>\n                  setNewSymbol({ ...newSymbol, quoteType: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"EQUITY\">EQUITY</option>\n                <option value=\"ETF\">ETF</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Industry:</Form.Label>\n              <Form.Control\n                value={newSymbol.industry}\n                onChange={(e) =>\n                  setNewSymbol({ ...newSymbol, industry: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                {industry.map((e) => (\n                  <option value={e}>{e}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Row className=\"justify-content-sm-center\">\n        <Col sm={5}>\n          <h1>Symbol Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <CSVLink {...csvReport}>Export Symbols as CSV</CSVLink>\n        </Col>\n        <Col>\n          <Form.Control\n            value={defaul}\n            onChange={(e) => setDefaul(e.target.value)}\n            required\n            as=\"select\"\n          >\n            <option value=\"All\">All</option>\n            <option value=\"EQUITY\">EQUITY</option>\n            <option value=\"ETF\">ETF</option>\n          </Form.Control>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Alert variant=\"info\">\n            Note: Symbols must be source verified. In short, they should be\n            available at Prime Source \"Alpha Vantage\". Adding and deletion of\n            Symbols should be minimal. To be only done, when needed.\n          </Alert>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Symbol</th>\n                <th>Industry</th>\n                <th>QuoteType</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>\n                  <Badge pill variant=\"warning\">\n                    Warning\n                  </Badge>\n                  <br />\n                  Option\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {!symbol.isLoading &&\n                filterSymbol(symbol.users, defaul).map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.Name}</td>\n                      <td>{e.symbol}</td>\n                      <td>{e.industry ? e.industry : \"Not Applicable\"}</td>\n                      <td>{e.quoteType}</td>\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            console.log(\"F\");\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {symbol.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!symbol.isLoading && symbol.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No Symbol Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default Symbol;\n","import { SYMBOL_FAILURE, SYMBOL_SUCCESS, SYMBOL_REQUEST } from \"./types\";\n\nexport function symbolSuccess(user) {\n  return {\n    type: SYMBOL_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function symbolRequest() {\n  return {\n    type: SYMBOL_REQUEST,\n  };\n}\n\nexport function symbolFailure(err) {\n  return { type: SYMBOL_FAILURE, payload: err };\n}\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\nimport Forma from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { resetPassword } from \"../services/auth.service\";\nconst required = (value) => {\n  if (!value) {\n    return <Alert variant=\"primary\">This is a required field</Alert>;\n  }\n};\n\nfunction ResetPassword() {\n  const history = useHistory();\n  const form = useRef();\n  const checkBtn = useRef();\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { messag, err } = useSelector((state) => state.auth);\n  const { message } = useSelector((state) => state.message);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      let valu = window.location.href;\n      let stri = valu.split(\"/\");\n      let val = stri[stri.length - 1];\n      dispatch(resetPassword(password, val));\n      setLoading(false);\n      history.push(\"/admin/login\");\n    } else {\n      setLoading(false);\n    }\n  }\n\n  const onChangeNewPassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/admin/dashBoard\" />;\n  }\n  return (\n    <Container>\n      <Row md={6} className=\"justify-content-md-center \">\n        <Col md={6}>\n          <h2>Change Password</h2>\n        </Col>\n      </Row>\n      <Row md={6} className=\"justify-content-md-center \">\n        <Col md={6}>\n          <Forma onSubmit={handleSubmit} ref={form}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Password</Form.Label>:\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={password}\n                onChange={onChangeNewPassword}\n                validations={[required]}\n              />\n            </Form.Group>\n\n            <Button disabled={loading} variant=\"primary\" type=\"submit\">\n              {loading ? <Spinner animation=\"border\" /> : \"Change\"}\n            </Button>\n\n            {message && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"warning\">{message}</Alert>\n              </Form.Group>\n            )}\n            {messag && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{messag}</Alert>\n              </Form.Group>\n            )}\n            {err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{err}</Alert>\n              </Form.Group>\n            )}\n\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n          </Forma>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ResetPassword;\n","import {\n  topSuccess,\n  topFailure,\n  topRequest,\n  ctopSuccess,\n  ctopFailure,\n  ctopRequest,\n} from \"../actions/toplist\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/showTop/`;\n\nexport const getTopLists = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(topRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const historicals = res.data.data;\n      dispatch(topSuccess(historicals));\n    } catch (e) {\n      dispatch(topFailure(e.message));\n    }\n  };\n};\n\nexport const createTopList = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(ctopRequest());\n      const res = await axios.post(API_URL, data, {\n        headers: authHeader(),\n      });\n      const historicals = res.data.data;\n      dispatch(ctopSuccess(historicals));\n    } catch (e) {\n      dispatch(ctopFailure(e.message));\n    }\n  };\n};\n\nexport const deleteTopList = async (id) => {\n  try {\n    await axios.delete(API_URL + id, {\n      headers: authHeader(),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getTop = async (id, setTopList) => {\n  try {\n    const res = await axios.get(API_URL + id, {\n      headers: authHeader(),\n    });\n    const dta = res.data.data;\n    setTopList(dta);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const updateTop = async (p, id) => {\n  try {\n    const res = await axios.put(API_URL + id, p, {\n      headers: authHeader(),\n    });\n    const dta = res.data.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import {\n  TOP_FAILURE,\n  TOP_SUCCESS,\n  TOP_REQUEST,\n  CTOP_FAILURE,\n  CTOP_SUCCESS,\n  CTOP_REQUEST,\n} from \"./types\";\n\nexport function topSuccess(user) {\n  return {\n    type: TOP_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function topRequest() {\n  return {\n    type: TOP_REQUEST,\n  };\n}\n\nexport function topFailure(err) {\n  return { type: TOP_FAILURE, payload: err };\n}\n\nexport function ctopSuccess(user) {\n  return {\n    type: CTOP_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function ctopRequest() {\n  return {\n    type: CTOP_REQUEST,\n  };\n}\n\nexport function ctopFailure(err) {\n  return { type: CTOP_FAILURE, payload: err };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Table,\n  Modal,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport _ from \"underscore\";\nimport { List } from \"../utils/dbFields\";\nimport Chips from \"react-chips\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { IconButton } from \"@material-ui/core\";\nimport {\n  getTopLists,\n  createTopList,\n  deleteTopList,\n  getTop,\n  updateTop,\n} from \"../services/toplist.service\";\nimport { getTime } from \"../utils/getTime\";\nimport { getTickers } from \"../services/ticker.service\";\n\nconst Model = (props) => {\n  const [topList, setTopList] = useState({\n    name: \"\",\n    responseKeys: [],\n    list: [],\n    sortBy: \"DESC\",\n    criteria: \"Automatic\",\n  });\n  const dispatch = useDispatch();\n  const [field, setField] = useState({ key: \"\", weightage: undefined });\n  useEffect(() => {\n    getTop(props.id, setTopList);\n  }, [props]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (\n      (topList.criteria === \"Automatic\" && topList.responseKeys.length > 0) ||\n      (topList.criteria === \"Manual\" && topList.list.length > 0)\n    ) {\n      let p;\n      p = {\n        name: topList.name,\n        criteria: topList.criteria,\n      };\n      if (topList.criteria === \"Automatic\") {\n        p = {\n          ...p,\n          responseKeys: topList.responseKeys,\n          sortBy: topList.sortBy,\n        };\n      } else {\n        p = {\n          ...p,\n          list: topList.list,\n        };\n      }\n\n      updateTop(p, props.id);\n\n      setTimeout(() => {\n        props.close();\n        dispatch(getTopLists());\n      }, 2000);\n    }\n  }\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"static\"\n      show={props.show}\n      onHide={props.close}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Update a Top List</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Name: </Form.Label>\n            <Form.Control\n              value={topList.name}\n              onChange={(e) => setTopList({ ...topList, name: e.target.value })}\n              placeholder=\"Enter a Name Here\"\n              required\n              type=\"text\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Criteria:</Form.Label>\n            <Form.Control\n              value={topList.criteria}\n              onChange={(e) =>\n                setTopList({ ...topList, criteria: e.target.value })\n              }\n              required\n              as=\"select\"\n            >\n              <option value=\"Automatic\">Automatic</option>\n              <option value=\"Manual\">Manual</option>\n            </Form.Control>\n          </Form.Group>\n          {topList.criteria === \"Automatic\" && (\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Order:</Form.Label>\n              <Form.Control\n                value={topList.sortBy}\n                onChange={(e) =>\n                  setTopList({ ...topList, sortBy: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"ASC\">Low to High</option>\n                <option value=\"DESC\">High to Low</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n          {topList.criteria === \"Manual\" && (\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n              <Chips\n                placeholder=\"Enter Stock Tags here\"\n                value={topList.list}\n                fetchSuggestions={(val) => getTickers(val)}\n                onChange={(e) => setTopList({ ...topList, list: e })}\n              />\n            </Form.Group>\n          )}\n          {topList.criteria === \"Automatic\" && (\n            <Form.Group>\n              {\" \"}\n              <Table responsive striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Key</th>\n                    <th>Weightage</th>\n                    <th>Option</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr>\n                    <td>\n                      <Form.Control\n                        value={field.key}\n                        onChange={(e) =>\n                          setField({ ...field, key: e.target.value })\n                        }\n                        required\n                        as=\"select\"\n                      >\n                        {List.TICKER.map((e) => {\n                          return <option value={e}>{e}</option>;\n                        })}\n                      </Form.Control>\n                    </td>\n                    <td>\n                      <Form.Control\n                        value={field.weightage}\n                        onChange={(e) =>\n                          setField({ ...field, weightage: e.target.value })\n                        }\n                        type=\"number\"\n                        placeholder=\"Enter Weightage for Field\"\n                      />\n                    </td>\n                    <td>\n                      <IconButton\n                        onClick={() => {\n                          if (\n                            field.key.trim() &&\n                            field.weightage &&\n                            field.weightage !== 0\n                          ) {\n                            setTopList({\n                              ...topList,\n                              responseKeys: [\n                                ...topList.responseKeys,\n                                {\n                                  key: field.key,\n                                  weightage: field.weightage,\n                                },\n                              ],\n                            });\n                            setField({ key: \"\", weightage: 0 });\n                          }\n                        }}\n                      >\n                        <AddCircleIcon color=\"primary\" />\n                      </IconButton>\n                    </td>\n                  </tr>\n                  {topList.responseKeys.map((e, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{e.key}</td>\n                        <td>{e.weightage}</td>\n                        <td>\n                          {\" \"}\n                          <IconButton\n                            onClick={() => {\n                              setTopList({\n                                ...topList,\n                                responseKeys: _.reject(\n                                  topList.responseKeys,\n                                  function (num) {\n                                    return num === topList.responseKeys[index];\n                                  }\n                                ),\n                              });\n                            }}\n                          >\n                            <RemoveCircleIcon color=\"primary\" />\n                          </IconButton>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Form.Group>\n          )}\n\n          <Button variant=\"primary\" type=\"submit\">\n            Update\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nfunction TopList() {\n  const [topList, setTopList] = useState({\n    name: \"\",\n    responseKeys: [],\n    list: [],\n    sortBy: \"DESC\",\n    criteria: \"Automatic\",\n  });\n  const [field, setField] = useState({ key: \"\", weightage: undefined });\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [showu, setShowU] = useState(false);\n  const handleCloseU = () => setShowU(false);\n  const [id, setId] = useState(\"\");\n  const handleShowU = () => {\n    setShowU(true);\n  };\n\n  let count = 0;\n  const dispatch = useDispatch();\n  const toplist = useSelector((state) => state.toplist);\n  useEffect(() => {\n    dispatch(getTopLists());\n  }, [dispatch]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (\n      (topList.criteria === \"Automatic\" && topList.responseKeys.length > 0) ||\n      (topList.criteria === \"Manual\" && topList.list.length > 0)\n    ) {\n      let p;\n      p = {\n        name: topList.name,\n        criteria: topList.criteria,\n      };\n      if (topList.criteria === \"Automatic\") {\n        p = {\n          ...p,\n          responseKeys: topList.responseKeys,\n          sortBy: topList.sortBy,\n        };\n      } else {\n        p = {\n          ...p,\n          list: topList.list,\n        };\n      }\n\n      dispatch(createTopList(p));\n      if (!toplist.err) {\n        setTimeout(() => {\n          setShow(false);\n          dispatch(getTopLists());\n        }, 2000);\n      }\n    }\n  }\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create a Top List</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Name: </Form.Label>\n              <Form.Control\n                value={topList.name}\n                onChange={(e) =>\n                  setTopList({ ...topList, name: e.target.value })\n                }\n                placeholder=\"Enter a Name Here\"\n                required\n                type=\"text\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Criteria:</Form.Label>\n              <Form.Control\n                value={topList.criteria}\n                onChange={(e) =>\n                  setTopList({ ...topList, criteria: e.target.value })\n                }\n                required\n                as=\"select\"\n              >\n                <option value=\"Automatic\">Automatic</option>\n                <option value=\"Manual\">Manual</option>\n              </Form.Control>\n            </Form.Group>\n            {topList.criteria === \"Automatic\" && (\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Order:</Form.Label>\n                <Form.Control\n                  value={topList.sortBy}\n                  onChange={(e) =>\n                    setTopList({ ...topList, sortBy: e.target.value })\n                  }\n                  required\n                  as=\"select\"\n                >\n                  <option value=\"ASC\">Low to High</option>\n                  <option value=\"DESC\">High to Low</option>\n                </Form.Control>\n              </Form.Group>\n            )}\n            {topList.criteria === \"Manual\" && (\n              <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                <Chips\n                  placeholder=\"Enter Stock Tickers here\"\n                  value={topList.list}\n                  fetchSuggestions={(val) => getTickers(val)}\n                  onChange={(e) => setTopList({ ...topList, list: e })}\n                />\n              </Form.Group>\n            )}\n            {topList.criteria === \"Automatic\" && (\n              <Form.Group>\n                {\" \"}\n                <Table responsive striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>Key</th>\n                      <th>Weightage</th>\n                      <th>Option</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    <tr>\n                      <td>\n                        <Form.Control\n                          value={field.key}\n                          onChange={(e) =>\n                            setField({ ...field, key: e.target.value })\n                          }\n                          required\n                          as=\"select\"\n                        >\n                          {List.TICKER.map((e) => {\n                            return <option value={e}>{e}</option>;\n                          })}\n                        </Form.Control>\n                      </td>\n                      <td>\n                        <Form.Control\n                          value={field.weightage}\n                          onChange={(e) =>\n                            setField({ ...field, weightage: e.target.value })\n                          }\n                          type=\"number\"\n                          placeholder=\"Enter Weightage for Field\"\n                        />\n                      </td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            if (\n                              field.key.trim() &&\n                              field.weightage &&\n                              field.weightage !== 0\n                            ) {\n                              setTopList({\n                                ...topList,\n                                responseKeys: [\n                                  ...topList.responseKeys,\n                                  {\n                                    key: field.key,\n                                    weightage: field.weightage,\n                                  },\n                                ],\n                              });\n                              setField({ key: \"\", weightage: 0 });\n                            }\n                          }}\n                        >\n                          <AddCircleIcon color=\"primary\" />\n                        </IconButton>\n                      </td>\n                    </tr>\n                    {topList.responseKeys.map((e, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{e.key}</td>\n                          <td>{e.weightage}</td>\n                          <td>\n                            {\" \"}\n                            <IconButton\n                              onClick={() => {\n                                setTopList({\n                                  ...topList,\n                                  responseKeys: _.reject(\n                                    topList.responseKeys,\n                                    function (num) {\n                                      return (\n                                        num === topList.responseKeys[index]\n                                      );\n                                    }\n                                  ),\n                                });\n                              }}\n                            >\n                              <RemoveCircleIcon color=\"primary\" />\n                            </IconButton>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Form.Group>\n            )}\n\n            <Button\n              disabled={toplist.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {toplist.cisLoading ? <Spinner animation=\"border\" /> : \"Create\"}\n            </Button>\n            {toplist.userc && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{toplist.userc}</Alert>\n              </Form.Group>\n            )}\n            {toplist.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{toplist.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Model show={showu} close={handleCloseU} id={id} />\n      <Row className=\"justify-content-md-center\">\n        <Col md={6}>\n          <h1>Top Lists Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Created</th>\n                <th>Updated</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!toplist.isLoading &&\n                toplist.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.name}</td>\n                      <td>{e.createdAt && getTime(e.createdAt)}</td>\n                      <td>{e.updatedAt && getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            deleteTopList(e._id);\n                            setTimeout(() => {\n                              dispatch(getTopLists());\n                            }, 1000);\n                          }}\n                        >\n                          <DeleteIcon color=\"dark\" />\n                        </IconButton>\n                        <IconButton\n                          onClick={() => {\n                            setId(e._id);\n                            setTimeout(() => handleShowU(), 1000);\n                          }}\n                        >\n                          <UpdateIcon color=\"dark\" />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {toplist.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!toplist.isLoading && toplist.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No Top Lists Data Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default TopList;\n","import {\n  indexSuccess,\n  indexFailure,\n  indexRequest,\n  cindexSuccess,\n  cindexFailure,\n  cindexRequest,\n} from \"../actions/index\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { url } from \"../utils/url\";\n\nconst API_URL = `${url}/api/v1/indices/`;\n\nexport const getIndices = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(indexRequest());\n      const res = await axios.get(API_URL, {\n        headers: authHeader(),\n      });\n      const indexs = res.data.data;\n      dispatch(indexSuccess(indexs));\n    } catch (e) {\n      dispatch(indexFailure(e.message));\n    }\n  };\n};\n\nexport const createIndex = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cindexRequest());\n      const res = await axios.post(API_URL, data, {\n        headers: authHeader(),\n      });\n      const indexs = res.data.data;\n      dispatch(cindexSuccess(indexs));\n    } catch (e) {\n      dispatch(cindexFailure(e.message));\n    }\n  };\n};\n\nexport const deleteIndex = async (id) => {\n  try {\n    await axios.delete(API_URL + id, {\n      headers: authHeader(),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const updateIndex = async (data, id) => {\n  try {\n    const message = await axios.put(API_URL + id, data, {\n      headers: authHeader(),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import {\n  INDEX_FAILURE,\n  INDEX_SUCCESS,\n  INDEX_REQUEST,\n  CINDEX_FAILURE,\n  CINDEX_SUCCESS,\n  CINDEX_REQUEST,\n} from \"./types\";\n\nexport function indexSuccess(user) {\n  return {\n    type: INDEX_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function indexRequest() {\n  return {\n    type: INDEX_REQUEST,\n  };\n}\n\nexport function indexFailure(err) {\n  return { type: INDEX_FAILURE, payload: err };\n}\n\nexport function cindexSuccess(user) {\n  return {\n    type: CINDEX_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function cindexRequest() {\n  return {\n    type: CINDEX_REQUEST,\n  };\n}\n\nexport function cindexFailure(err) {\n  return { type: CINDEX_FAILURE, payload: err };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\n\nimport Chips from \"react-chips\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Popover,\n  OverlayTrigger,\n  Table,\n  Modal,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport {\n  getIndices,\n  createIndex,\n  deleteIndex,\n  updateIndex,\n} from \"../services/indices.service\";\nimport { getETFs } from \"../services/ticker.service\";\nimport { getTime } from \"../utils/getTime\";\n\nconst Model = (props) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState({ name: \"\", component: [] });\n  useEffect(() => {\n    setIndex({ name: props.e.name, component: props.e.component });\n  }, [props]);\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (index.name.length > 0 && index.component.length > 0) {\n      let p;\n      p = {\n        name: index.name,\n        component: index.component,\n      };\n\n      updateIndex(p, props.id);\n\n      setTimeout(() => {\n        dispatch(getIndices());\n        props.close();\n      }, 2000);\n    }\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"static\"\n      show={props.show}\n      onHide={props.close}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Update an Index</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {\" \"}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Index Name: </Form.Label>\n            <Form.Control\n              value={index.name}\n              onChange={(e) => setIndex({ ...index, name: e.target.value })}\n              placeholder=\"Enter an Index name Here\"\n              required\n              type=\"text\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect2\">\n            <Chips\n              placeholder=\"Enter ETF Tickers here\"\n              value={index.component}\n              fetchSuggestions={(val) => getETFs(val)}\n              onChange={(e) => setIndex({ ...index, component: e })}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Update\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nfunction Index() {\n  const [index, setIndex] = useState({ name: \"\", component: [] });\n  const [show, setShow] = useState(false);\n  const [showu, setShowU] = useState(false);\n  const handleCloseU = () => setShowU(false);\n  const [id, setId] = useState(\"\");\n  const handleShowU = (e) => {\n    setUp(e);\n    setShowU(true);\n  };\n  const [up, setUp] = useState({ name: \"\", component: [] });\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  let count = 0;\n  const dispatch = useDispatch();\n  const indices = useSelector((state) => state.indices);\n  useEffect(() => {\n    dispatch(getIndices());\n  }, [dispatch]);\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (index.name.length > 0 && index.component.length > 0) {\n      let p;\n      p = {\n        name: index.name,\n        addETF: index.component,\n      };\n\n      dispatch(createIndex(p));\n      if (!indices.err) {\n        setTimeout(() => {\n          setShow(false);\n          dispatch(getIndices());\n        }, 2000);\n      }\n    }\n  }\n\n  return (\n    <Container className=\"xe\" fluid>\n      <div className=\"me\">\n        <IconButton onClick={handleShow}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </div>\n\n      <Modal\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create an Index</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\" \"}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Index Name: </Form.Label>\n              <Form.Control\n                value={index.name}\n                onChange={(e) => setIndex({ ...index, name: e.target.value })}\n                placeholder=\"Enter an Index name Here\"\n                required\n                type=\"text\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n              <Chips\n                placeholder=\"Enter ETF Tickers here\"\n                value={index.component}\n                fetchSuggestions={(val) => getETFs(val)}\n                onChange={(e) => setIndex({ ...index, component: e })}\n              />\n            </Form.Group>\n\n            <Button\n              disabled={indices.cisLoading}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              {indices.cisLoading ? <Spinner animation=\"border\" /> : \"Create\"}\n            </Button>\n            {indices.userc && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"success\">{indices.userc}</Alert>\n              </Form.Group>\n            )}\n            {indices.err && (\n              <Form.Group controlId=\"formBasicEmail\">\n                <Alert variant=\"danger\">{indices.err}</Alert>\n              </Form.Group>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Model show={showu} close={handleCloseU} e={up} id={id} />\n      <Row className=\"justify-content-sm-center\">\n        <Col sm={6}>\n          <h1>Index Section</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Index Name</th>\n                <th>Components</th>\n                <th>Created At</th>\n                <th>Updated At</th>\n                <th>Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!indices.isLoading &&\n                indices.users.map((e) => {\n                  count++;\n                  return (\n                    <tr key={e._id}>\n                      <td>{count}</td>\n                      <td>{e.name}</td>\n\n                      <td>\n                        {e.component.map((e) => {\n                          return <p>{e}</p>;\n                        })}\n                      </td>\n                      <td>{getTime(e.createdAt)}</td>\n                      <td>{getTime(e.updatedAt)}</td>\n                      <td>\n                        <IconButton\n                          onClick={() => {\n                            deleteIndex(e._id);\n                            setTimeout(() => {\n                              dispatch(getIndices());\n                            }, 1000);\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n\n                        <IconButton\n                          onClick={() => {\n                            setId(e._id);\n                            setTimeout(() => handleShowU(e), 1000);\n                          }}\n                        >\n                          <UpdateIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {indices.isLoading && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={1}>\n            <Spinner animation=\"border\" />\n          </Col>\n        </Row>\n      )}\n      {!indices.isLoading && indices.count === 0 && (\n        <Row className=\"justify-content-sm-center \">\n          <Col sm={6}>\n            <h3>No Index Added</h3>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default Index;\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport { logout } from \"./actions/auth\";\n\nimport { Navbar, Button, Nav } from \"react-bootstrap\";\nimport Login from \"./components/Login\";\nimport DashBoard from \"./components/DashBoard\";\nimport User from \"./components/User\";\nimport Scheduler from \"./components/Scheduler\";\nimport AdminUser from \"./components/AdminUser\";\nimport UrlApi from \"./components/UrlApi\";\nimport Portfolio from \"./components/Portfolio\";\n\nimport HistoricalData from \"./components/HistoricalData\";\nimport Symbols from \"./components/Symbols\";\nimport ResetPassword from \"./components/ResetPassword\";\nimport TopList from \"./components/TopList\";\nimport Index from \"./components/Index\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { isLoggedIn, user } = useSelector((state) => state.auth);\n  const logOut = () => {\n    dispatch(logout());\n  };\n  return (\n    <>\n      <Navbar\n        collapseOnSelect\n        sticky=\"top\"\n        bg=\"primary\"\n        variant=\"light\"\n        expand=\"lg\"\n      >\n        <Navbar.Brand href=\"#\">\n          <h3>Xupoli</h3>\n        </Navbar.Brand>\n        {isLoggedIn && (\n          <>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/dashBoard\">\n                    DashBoard\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/user\">\n                    Users\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/adminuser\">\n                    Admin User\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/portfolio\">\n                    Portfolio\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/scheduler\">\n                    Scheduler\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/apikey\">\n                    URL/API Section\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/historical\">\n                    Historical\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/symbols\">\n                    Symbols\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/showTop\">\n                    Top List\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link className=\"de\" to=\"/admin/index\">\n                    Index\n                  </Link>\n                </Nav.Link>\n              </Nav>\n\n              <Nav className=\"justify-content-end\">\n                <Nav.Item>\n                  <Navbar.Text>Signed in as: {user.userName}</Navbar.Text>\n                </Nav.Item>\n                <Nav.Item>\n                  <Button onClick={logOut} variant=\"danger\">\n                    Logout\n                  </Button>\n                </Nav.Item>\n              </Nav>\n            </Navbar.Collapse>\n          </>\n        )}\n      </Navbar>\n      <Switch>\n        <PrivateRoute path=\"/admin/dashBoard\" exact component={DashBoard} />\n        <PrivateRoute path=\"/admin/user\" exact component={User} />\n        <PrivateRoute path=\"/admin/scheduler\" exact component={Scheduler} />\n        <PrivateRoute path=\"/admin/adminuser\" exact component={AdminUser} />\n        <PrivateRoute path=\"/admin/apikey\" exact component={UrlApi} />\n        <PrivateRoute path=\"/admin/portfolio\" exact component={Portfolio} />\n        <PrivateRoute\n          path=\"/admin/historical\"\n          exact\n          component={HistoricalData}\n        />\n        <PrivateRoute path=\"/admin/symbols\" exact component={Symbols} />\n        <PrivateRoute path=\"/admin/showTop\" exact component={TopList} />\n        <PrivateRoute path=\"/admin/index\" exact component={Index} />\n        {!isLoggedIn ? (\n          <Route path=\"/admin/login\" exact component={Login} />\n        ) : (\n          <Redirect to=\"/admin/dashBoard\" />\n        )}\n        {!isLoggedIn ? (\n          <Route\n            path=\"/admin/resetPassword/:resettoken\"\n            exact\n            component={ResetPassword}\n          />\n        ) : (\n          <Redirect to=\"/admin/dashBoard\" />\n        )}\n\n        <Route path=\"/admin/*\" exact component={Login} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  FORGET_SUCCESS,\n  FORGET_FAILURE,\n  FORGET_REQUEST,\n  RESET_SUCCESS,\n  RESET_FAILURE,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user, err: \"\", messag: \"\", isloading: false }\n  : { isLoggedIn: false, user: null, err: \"\", messag: \"\", isloading: false };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        err: \"\",\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case FORGET_SUCCESS:\n      return {\n        ...state,\n        messag: payload,\n        isLoggedIn: false,\n        user: null,\n      };\n    case FORGET_FAILURE:\n      return {\n        ...state,\n        isLoggedIn: false,\n        err: payload,\n        user: null,\n      };\n    case RESET_SUCCESS:\n      return {\n        ...state,\n        messag: payload,\n        isLoggedIn: false,\n        user: null,\n      };\n    case RESET_FAILURE:\n      return {\n        ...state,\n        isLoggedIn: false,\n        err: payload,\n        user: null,\n      };\n    case FORGET_REQUEST:\n      return {\n        ...state,\n        isloading: true,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { USER_REQUEST, USER_SUCCESS, USER_FAILURE } from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case USER_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case USER_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case USER_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  ADMINUSER_REQUEST,\n  ADMINUSER_SUCCESS,\n  ADMINUSER_FAILURE,\n  CADMINUSER_REQUEST,\n  CADMINUSER_SUCCESS,\n  CADMINUSER_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  isLoading: false,\n  cisLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case ADMINUSER_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case ADMINUSER_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case ADMINUSER_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    case CADMINUSER_REQUEST: {\n      return { ...initialState, cisLoading: true };\n    }\n    case CADMINUSER_SUCCESS: {\n      return {\n        ...initialState,\n        cisLoading: false,\n        userc: payload,\n      };\n    }\n    case CADMINUSER_FAILURE: {\n      return { ...initialState, cisLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  PORTFOLIO_REQUEST,\n  PORTFOLIO_SUCCESS,\n  PORTFOLIO_FAILURE,\n  CPORTFOLIO_REQUEST,\n  CPORTFOLIO_SUCCESS,\n  CPORTFOLIO_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  cisLoading: false,\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case PORTFOLIO_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case PORTFOLIO_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case PORTFOLIO_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    case CPORTFOLIO_REQUEST: {\n      return { ...initialState, cisLoading: true };\n    }\n    case CPORTFOLIO_SUCCESS: {\n      return {\n        ...initialState,\n        cisLoading: false,\n        userc: payload,\n      };\n    }\n    case CPORTFOLIO_FAILURE: {\n      return { ...initialState, cisLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  HISTORICAL_REQUEST,\n  HISTORICAL_SUCCESS,\n  HISTORICAL_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  cisLoading: false,\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case HISTORICAL_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case HISTORICAL_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case HISTORICAL_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  URL_REQUEST,\n  URL_SUCCESS,\n  URL_FAILURE,\n  CURL_REQUEST,\n  CURL_SUCCESS,\n  CURL_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  cisLoading: false,\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case URL_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case URL_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case URL_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    case CURL_REQUEST: {\n      return { ...initialState, cisLoading: true };\n    }\n    case CURL_SUCCESS: {\n      return {\n        ...initialState,\n        cisLoading: false,\n        userc: payload,\n      };\n    }\n    case CURL_FAILURE: {\n      return { ...initialState, cisLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SYMBOL_REQUEST,\n  SYMBOL_SUCCESS,\n  SYMBOL_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case SYMBOL_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case SYMBOL_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case SYMBOL_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  TOP_FAILURE,\n  TOP_SUCCESS,\n  TOP_REQUEST,\n  CTOP_FAILURE,\n  CTOP_SUCCESS,\n  CTOP_REQUEST,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  cisLoading: false,\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case TOP_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case TOP_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case TOP_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    case CTOP_REQUEST: {\n      return { ...initialState, cisLoading: true };\n    }\n    case CTOP_SUCCESS: {\n      return {\n        ...initialState,\n        cisLoading: false,\n        userc: payload,\n      };\n    }\n    case CTOP_FAILURE: {\n      return { ...initialState, cisLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  INDEX_REQUEST,\n  INDEX_SUCCESS,\n  INDEX_FAILURE,\n  CINDEX_REQUEST,\n  CINDEX_SUCCESS,\n  CINDEX_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  cisLoading: false,\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case INDEX_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case INDEX_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case INDEX_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    case CINDEX_REQUEST: {\n      return { ...initialState, cisLoading: true };\n    }\n    case CINDEX_SUCCESS: {\n      return {\n        ...initialState,\n        cisLoading: false,\n        userc: payload,\n      };\n    }\n    case CINDEX_FAILURE: {\n      return { ...initialState, cisLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SCHEDULER_REQUEST,\n  SCHEDULER_SUCCESS,\n  SCHEDULER_FAILURE,\n  CSCHEDULER_REQUEST,\n  CSCHEDULER_SUCCESS,\n  CSCHEDULER_FAILURE,\n} from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n  users: [],\n  userc: \"\",\n  cisLoading: false,\n  isLoading: false,\n  err: \"\",\n};\n\nexport default function (state = initialState, actions) {\n  const { payload } = actions;\n  switch (actions.type) {\n    case SCHEDULER_REQUEST: {\n      return { ...initialState, isLoading: true };\n    }\n    case SCHEDULER_SUCCESS: {\n      return {\n        ...initialState,\n        isLoading: false,\n        users: payload,\n        count: payload.length,\n      };\n    }\n    case SCHEDULER_FAILURE: {\n      return { ...initialState, isLoading: false, err: payload };\n    }\n    case CSCHEDULER_REQUEST: {\n      return { ...initialState, cisLoading: true };\n    }\n    case CSCHEDULER_SUCCESS: {\n      return {\n        ...initialState,\n        cisLoading: false,\n        userc: payload,\n      };\n    }\n    case CSCHEDULER_FAILURE: {\n      return { ...initialState, cisLoading: false, err: payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\nimport user from \"./user\";\nimport adminuser from \"./adminuser\";\nimport portfolio from \"./portfolio\";\nimport historical from \"./historical\";\nimport urlapi from \"./urlapi\";\nimport symbol from \"./symbol\";\nimport toplist from \"./toplist\";\nimport indices from \"./indices\";\nimport scheduler from \"./scheduler\";\nexport default combineReducers({\n  auth,\n  message,\n  user,\n  adminuser,\n  portfolio,\n  historical,\n  urlapi,\n  symbol,\n  toplist,\n  indices,\n  scheduler,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}